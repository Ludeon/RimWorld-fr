<?xml version="1.0" encoding="UTF-8"?>
<LanguageData>
  
  <!-- EN:
    <li>r_logentry(p=0.5)->[INITIATOR_definite] [damaged_past] [atMaybe] [RECIPIENT_definite] in the [recipient_part0_label] [deflected_result].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] [skillAdvMaybe] [damaged_past] [atMaybe] [RECIPIENT_definite] with [implement] [deflected_result].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] [skillAdvMaybe] [damaged_past] [atMaybe] [RECIPIENT_definite] [deflected_result].</li>
    <li>r_logentry(p=0.1)->[INITIATOR_definite], [skillDescMelee], [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label] [deflected_result].</li>
    <li>r_logentry(p=0.1)->[INITIATOR_definite] hit [RECIPIENT_definite] with a [damaged_inf] from [implement] [deflected_result].</li>
    <li>r_logentry(p=0.1)->[INITIATOR_definite] [skillAdvMaybe] used [implement] to [damaged_inf] [RECIPIENT_definite] [deflected_result].</li>
    <li>skillAdvMaybe-></li>
    <li>skillAdvMaybe->[skillAdv]</li>
    <li>atMaybe-></li>
    <li>atMaybe->at</li>
    <li>deflected_result->, but the [TOOL_label] [deflected] off [harmlessly_opt]</li>
    <li>deflected_result->, [deflecting] off [RECIPIENT_possessive] armor [harmlessly_opt]</li>
    <li>harmlessly_opt(p=4)-></li>
    <li>harmlessly_opt->[harmlessly]</li>
    <li>harmlessly->harmlessly</li>
    <li>harmlessly->uselessly</li>
    <li>deflected->deflected</li>
    <li>deflected->scraped</li>
    <li>deflected->slid</li>
    <li>deflected->grazed</li>
    <li>deflected->bounced</li>
    <li>deflected->glanced</li>
    <li>deflecting->deflecting</li>
    <li>deflecting->scraping</li>
    <li>deflecting->sliding</li>
    <li>deflecting->grazing</li>
    <li>deflecting->bouncing</li>
    <li>deflecting->glancing</li>
  -->
  <Combat_Deflect.rulePack.rulesStrings>
    <li>r_logentry(p=1)->[INITIATOR_definite] a [damaged_past] [atMaybe] [RECIPIENT_definite] en visant le/la [recipient_part0_label] [deflected_result].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] a [damaged_past] [skillAdvMaybe] [atMaybe] [RECIPIENT_definite] avec [implement] [deflected_result].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] a [damaged_past] [skillAdvMaybe] [atMaybe] [RECIPIENT_definite] [deflected_result].</li>
    <li>r_logentry(p=0.1)->[INITIATOR_definite], [skillDescMelee], a [damaged_past] [RECIPIENT_definite] en visant le/la [recipient_part0_label] [deflected_result].</li>
    <!-- BUG: RECIPIENT_gender not defined ! -->
    <li>r_logentry(p=0.1)->[INITIATOR_definite] a frappé [RECIPIENT_definite] pour [RECIPIENT_gender ? le : la : le/la]  [damaged_inf] avec [implement] [deflected_result].</li>
    <li>r_logentry(p=0.1)->[INITIATOR_definite] a frappé [RECIPIENT_definite] pour le/la [damaged_inf] avec [implement] [deflected_result].</li>
    <li>r_logentry(p=0.1)->[INITIATOR_definite] [skillAdvMaybe] a utilisé [implement] pour [damaged_inf] [RECIPIENT_definite] [deflected_result].</li>
    <li>skillAdvMaybe-></li>
    <li>skillAdvMaybe->[skillAdv]</li>
    <!-- [atMaybe] désactivé: semble inapproprié en FR -->
    <li>atMaybe-></li>
    <!--
    <li>atMaybe->at</li>
    <li>at-></li>
    <li>at->au/à la</li>
  -->
    <li>deflected_result->, mais [TOOL_label] [deflected] [harmlessly_opt]</li>
    <li>deflected_result->, [deflecting] son armure [harmlessly_opt]</li>
    <li>harmlessly_opt(p=4)-></li>
    <li>harmlessly_opt->[harmlessly]</li>
    <li>harmlessly->sans faire de dégât</li>
    <li>harmlessly->vainement</li>
    <!-- éraflant son armure -->
    <li>deflecting->raclant</li>
    <li>deflecting->éraflant</li>
    <li>deflecting->rayant</li>
    <li>deflecting->effleurant</li>
    <!-- glissant sur son armure -->
    <li>deflecting->glissant sur</li>
    <li>deflecting->rebondissant sur</li>
    <!-- [deflected] : pas de (sur) son armure -->
    <li>deflected->a dévié</li>
    <li>deflected->a ripé</li>
    <li>deflected->a glissé</li>
  </Combat_Deflect.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry(p=0.5)->[RECIPIENT_definite] [skillAdvMaybe] dodged [INITIATOR_definite]'s [damaged_inf] from [implement].</li>
    <li>r_logentry(p=0.5)->[RECIPIENT_definite] [skillAdvMaybe] dodged [INITIATOR_definite]'s [damaged_inf].</li>
    <li>skillAdvMaybe-></li>
    <li>skillAdvMaybe->[skillAdv]</li>
    <li>result->but [RECIPIENT_definite] leapt out of the way</li>
    <li>result->but was deceived by [RECIPIENT_definite]'s feint</li>
    <li>result->but the attack was cleverly avoided</li>
  -->
  <Combat_Dodge.rulePack.rulesStrings>
    <!-- BUG: RECIPIENT_gender not defined ! -->
    <li>r_logentry(p=0.2)->[RECIPIENT_definite] a esquivé [skillAdvMaybe] [INITIATOR_definite] voulant [RECIPIENT_gender ? le : la : le/la] [damaged_inf] avec [implement].</li>
    <li>r_logentry(p=0.2)->[RECIPIENT_definite] a esquivé [skillAdvMaybe] [INITIATOR_definite] voulant [RECIPIENT_gender ? le : la : le/la] [damaged_inf].</li>
    <li>r_logentry(p=0.2)->[RECIPIENT_definite] a esquivé [skillAdvMaybe] [INITIATOR_definite] voulant le/la [damaged_inf] avec [implement].</li>
    <li>r_logentry(p=0.2)->[RECIPIENT_definite] a esquivé [skillAdvMaybe] [INITIATOR_definite] voulant le/la [damaged_inf].</li>
    <li>skillAdvMaybe-></li>
    <li>skillAdvMaybe->[skillAdv]</li>
    <li>result->mais [RECIPIENT_definite] a bondi hors de portée</li>
    <!-- BUG: RECIPIENT_gender not defined ! -->
    <li>result->mais a été tromp[INITIATOR_gender ? é : ée : é(e)] par une feinte de [RECIPIENT_definite]</li>
    <li>result->mais a été trompé(e) par une feinte de [RECIPIENT_definite]</li>
    <li>result->mais l'attaque a été savamment esquivée</li>
  </Combat_Dodge.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry(p=1.0)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label] [strikeAdv].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label], [flavortext_consequence].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite], [skillDescMelee], [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label].</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite], [skillDescMelee], [strikeAdv] [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets] [destroyed_suffix].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets] with [implement].</li>
    <li>r_logentry(p=1,recipient_part_count==0)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] with [implement].</li>
    <li>r_logentry(p=0.4,recipient_part_count==0)->[INITIATOR_definite] [skillAdv] [damaged_past] [RECIPIENT_definite] with [implement].</li>
    <li>result(p=1,recipient_part_damaged_count==0)->[destroyed_present] [RECIPIENT_possessive] [destroyed_targets]</li>
    <li>result(p=1,recipient_part_destroyed_count==0)->[damaged_present] [RECIPIENT_possessive] [damaged_targets]</li>
    <li>result(p=1)->[destroyed_present] [RECIPIENT_possessive] [destroyed_targets] and [damaged_present] [RECIPIENT_possessive] [damaged_targets]</li>
    <li>action(p=1.0)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] with [implement]</li>
    <li>action(p=0.3)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite], [skillDescMelee], [damaged_past] [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite] hit [RECIPIENT_definite] with a [damaged_inf] from [implement]</li>
    <li>action(p=0.3)->[INITIATOR_definite], [skillDescMelee], hit [RECIPIENT_definite] with a [damaged_inf] from [implement]</li>
    <li>action(p=0.3)->[INITIATOR_definite] used [implement] to [damaged_inf] [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite] used [implement] [skillAdv] to [damaged_inf] [RECIPIENT_definite]</li>
  -->
  <Combat_Hit.rulePack.rulesStrings>
    <li>r_logentry(p=1.0)->[INITIATOR_definite] a [damaged_past] [RECIPIENT_definite] en visant le/la [recipient_part0_label].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite] a [damaged_past] [RECIPIENT_definite] en visant le/la [recipient_part0_label] [strikeAdv].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite] a [damaged_past] [RECIPIENT_definite] en visant le/la [recipient_part0_label], [flavortext_consequence].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite], [skillDescMelee], a [damaged_past] [RECIPIENT_definite] en visant le/la [recipient_part0_label].</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite], [skillDescMelee], a [damaged_past] [strikeAdv] [RECIPIENT_definite] en visant le/la [recipient_part0_label].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite] a [destroyed_past] [destroyed_targets] de [RECIPIENT_definite].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite] a [destroyed_past] [destroyed_targets] de [RECIPIENT_definite] [destroyed_suffix].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite] a [destroyed_past] [destroyed_targets] de [RECIPIENT_definite] avec [implement].</li>
    <li>r_logentry(p=1,recipient_part_count==0)->[INITIATOR_definite] a [damaged_past] [RECIPIENT_definite] avec [implement].</li>
    <li>r_logentry(p=0.4,recipient_part_count==0)->[INITIATOR_definite] a [damaged_past] [skillAdv] [RECIPIENT_definite] avec [implement].</li>
    <li>result(p=1,recipient_part_damaged_count==0)->lui [destroyed_present] [destroyed_targets]</li>
    <li>result(p=1,recipient_part_destroyed_count==0)->lui [damaged_present] [damaged_targets]</li>
    <li>result(p=1)->lui [destroyed_present] [destroyed_targets] et lui [damaged_present] [damaged_targets]</li>
    <li>action(p=1.0)->[INITIATOR_definite] a [damaged_past] [RECIPIENT_definite] avec [implement]</li>
    <li>action(p=0.3)->[INITIATOR_definite] a [damaged_past] [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite], [skillDescMelee], a [damaged_past] [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite] a frappé pour [damaged_inf] [RECIPIENT_definite] avec [implement]</li>
    <li>action(p=0.3)->[INITIATOR_definite], [skillDescMelee], a frappé pour [damaged_inf] [RECIPIENT_definite] avec [implement]</li>
    <li>action(p=0.3)->[INITIATOR_definite] a utilisé [implement] pour [damaged_inf] [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite] a utilisé [implement] [skillAdv] pour [damaged_inf] [RECIPIENT_definite]</li>
  </Combat_Hit.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry(p=0.3)->[RECIPIENT_definite] avoided [INITIATOR_definite]'s [WEAPON_label] [damaged_inf].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] missed [RECIPIENT_definite] with a [damaged_inf] from [implement].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] [failtype] while trying to [damaged_inf] [RECIPIENT_definite] with [implement].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] [failtype] while trying to [damaged_inf] [RECIPIENT_definite].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] tried [skillAdvMaybe] to [damaged_inf] [RECIPIENT_definite], but [failtype].</li>
    <li>skillAdvMaybe-></li>
    <li>skillAdvMaybe->[skillAdv]</li>
    <li>failtype(p=5)->missed</li>
    <li>failtype->stumbled</li>
    <li>failtype->tripped</li>
    <li>failtype->flailed</li>
    <li>failtype->floundered</li>
    <li>result(p=4)->but missed</li>
    <li>result->but hit only air</li>
    <li>result->but the swing went wide</li>
    <li>result->but stumbled at the last second</li>
    <li>result(initiator_flesh!=Mechanoid)->but hesitated at the last second</li>
  -->
  <Combat_Miss.rulePack.rulesStrings>
    <!-- BUG: RECIPIENT_gender not defined ! -->
    <li>r_logentry(p=0.3)->[RECIPIENT_definite] a évité [INITIATOR_definite] voulant [RECIPIENT_gender ? le : la : le/la] [damaged_inf] avec son/sa [WEAPON_label].</li>
    <li>r_logentry(p=0.3)->[RECIPIENT_definite] a évité [INITIATOR_definite] voulant le/la [damaged_inf] avec son/sa [WEAPON_label].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] a raté de [damaged_inf] [RECIPIENT_definite] avec [implement].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] [failtype] en essayant de [damaged_inf] [RECIPIENT_definite] avec [implement].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] [failtype] en essayant de [damaged_inf] [RECIPIENT_definite].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] a essayé [skillAdvMaybe] de [damaged_inf] [RECIPIENT_definite], mais [failtype].</li>
    <li>skillAdvMaybe-></li>
    <li>skillAdvMaybe->[skillAdv]</li>
    <li>failtype(p=5)->a échoué</li>
    <li>failtype->a trébuché</li>
    <li>failtype->a titubé</li>
    <li>failtype->a raté</li>
    <li>failtype->a foiré</li>
    <li>result(p=4)->mais a raté sa cible</li>
    <li>result->mais a frappé dans le vide</li>
    <li>result->mais a perdu son élan</li>
    <li>result->mais a trébuché à la dernière seconde</li>
    <li>result(INITIATOR_flesh!=Mechanoid)->mais a hésité à la dernière seconde</li>
  </Combat_Miss.rulePack.rulesStrings>
  
</LanguageData>