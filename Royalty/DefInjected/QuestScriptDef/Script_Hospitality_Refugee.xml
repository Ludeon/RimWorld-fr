<?xml version="1.0" encoding="UTF-8"?>
<LanguageData>
  
  <!-- EN:
    <li>lastOrNot(lodgerCount==1)-></li>
    <li>lastOrNot(lodgerCount>=2)->last</li>
    <li>lodgersLabelSingularOrPlural(lodgerCount==1)->[lodgersLabel]</li>
    <li>lodgersLabelSingularOrPlural(lodgerCount>=2)->[lodgersLabelPlural]</li>
    <li>lodgersArriveLetterLabel->[lodgersLabelSingularOrPlural] arrived</li>
    <li>lodgersArriveLetterText->[lodgersSingularOrPluralDef] [hasHave] arrived. [lodgersPronoun] will stay with you for [questDurationTicks_duration] so [lodgersPronoun] can rest and regroup.</li>
    <li>hasHave(lodgerCount==1)->has</li>
    <li>hasHave(lodgerCount>=2)->have</li>
    <li>appalledButNoAction->The {PAWNSALIVECOUNT_multiple ? others seem : last [lodgersLabel] is} appalled at this, but {PAWNSALIVECOUNT_multiple ? are: is} not taking action against you.</li>
    <li>othersWillNotAccept->The {PAWNSALIVECOUNT_multiple ? others are : last [lodgersLabel] is} not willing to accept this</li>
    <li>turnedViolent->[othersWillNotAccept], and {PAWNSALIVECOUNT_multiple ? have : has } turned violently against you.</li>
    <li>decidedToLeave->[othersWillNotAccept], and {PAWNSALIVECOUNT_multiple ? have : has } decided to leave.</li>
    <li>whoAskedToStay->who asked to stay with you</li>
    <li>oneOfThe->one of the desperate [faction_pawnsPlural] who asked to stay with you</li>
    <li>questOver->The quest '[resolvedQuestName]' is over.</li>
    <li>letterIntroDeath->{SUBJECT_definite}, [oneOfThe] has died.</li>
    <li>lodgerDiedMemoryThoughtLetterLabel->[lodgersLabel] died: Anger</li>
    <li>lodgerDiedMemoryThoughtLetterText->[letterIntroDeath]\n\n[appalledButNoAction]</li>
    <li>lodgerDiedAttackPlayerLetterLabel->[lodgersLabel] died: Revenge</li>
    <li>lodgerDiedAttackPlayerLetterText->[letterIntroDeath]\n\n[turnedViolent]</li>
    <li>lodgerDiedLeaveMapLetterLabel->[lodgersLabel] died: Departure</li>
    <li>lodgerDiedLeaveMapLetterText->[letterIntroDeath]\n\n[decidedToLeave]</li>
    <li>lodgersAllDiedLetterLabel->Quest failed</li>
    <li>lodgersAllDiedLetterText->{SUBJECT_definite}, the [lastOrNot] desperate [faction_pawnSingular] [whoAskedToStay], has died.\n\n[questOver]</li>
    <li>letterIntroArrested->You arrested {SUBJECT_definite}, [oneOfThe].</li>
    <li>lodgerArrestedMemoryThoughtLetterLabel->[lodgersLabel] arrested: Anger</li>
    <li>lodgerArrestedMemoryThoughtLetterText->[letterIntroArrested]\n\n[appalledButNoAction]</li>
    <li>lodgerArrestedAttackPlayerLetterLabel->[lodgersLabel] arrested: Revenge</li>
    <li>lodgerArrestedAttackPlayerLetterText->[letterIntroArrested]\n\n[turnedViolent]</li>
    <li>lodgerArrestedLeaveMapLetterLabel->[lodgersLabel] arrested: Departure</li>
    <li>lodgerArrestedLeaveMapLetterText->[letterIntroArrested]\n\n[decidedToLeave]</li>
    <li>lodgersAllArrestedLetterLabel->Quest failed</li>
    <li>lodgersAllArrestedLetterText->You arrested {SUBJECT_definite}, the [lastOrNot] desperate [faction_pawnSingular] [whoAskedToStay].\n\n[questOver]</li>
    <li>letterIntroViolated->{SUBJECT_definite}, [oneOfThe], was violated by surgery.</li>
    <li>lodgerViolatedMemoryThoughtLetterLabel->[lodgersLabel] violated: Anger</li>
    <li>lodgerViolatedMemoryThoughtLetterText->[letterIntroViolated]\n\n[appalledButNoAction]</li>
    <li>lodgerViolatedAttackPlayerLetterLabel->[lodgersLabel] violated: Revenge</li>
    <li>lodgerViolatedAttackPlayerLetterText->[letterIntroViolated]\n\n[turnedViolent]</li>
    <li>lodgerViolatedLeaveMapLetterLabel->[lodgersLabel] violated: Departure</li>
    <li>lodgerViolatedLeaveMapLetterText->[letterIntroViolated]\n\n[decidedToLeave]</li>
    <li>letterIntroPsychicRitualTarget->{SUBJECT_definite}, [oneOfThe], was the target of a psychic ritual.</li>
    <li>lodgerPsychicRitualTargetMemoryThoughtLetterLabel->[lodgersLabel] violated: Anger</li>
    <li>lodgerPsychicRitualTargetMemoryThoughtLetterText->[letterIntroPsychicRitualTarget]\n\n[appalledButNoAction]</li>
    <li>lodgerPsychicRitualTargetAttackPlayerLetterLabel->[lodgersLabel] violated: Revenge</li>
    <li>lodgerPsychicRitualTargetAttackPlayerLetterText->[letterIntroPsychicRitualTarget]\n\n[turnedViolent]</li>
    <li>lodgerPsychicRitualTargetLeaveMapLetterLabel->[lodgersLabel] violated: Departure</li>
    <li>lodgerPsychicRitualTargetLeaveMapLetterText->[letterIntroPsychicRitualTarget]\n\n[decidedToLeave]</li>
    <li>mutinyLetterLabel->Betrayal</li>
    <li>mutinyLetterText->[lodgersSingularOrPluralDef] [whoAskedToStay] [areIs] turning against you!\n\nIt seems [lodgersPronoun] had this treachery planned all along.</li>
    <li>areIs(lodgerCount==1)->is</li>
    <li>areIs(lodgerCount>=2)->are</li>
    <li>lodgersLeavingLetterLabel->[lodgersLabelSingularOrPlural] leaving</li>
    <li>lodgersLeavingLetterText->{FACTION_leaderNameDef} thanks you for allowing {FACTION_leaderObjective} to stay at [map_definite] for these [questDurationTicks_duration]. {FACTION_leaderPronoun} is now moving on with {FACTION_leaderPossessive} people.\n\n{FACTION_leaderNameDef} says {FACTION_leaderPronoun} won't forget what you've done.</li>
  -->
  <Hospitality_Refugee.questContentRules.rulesStrings>
    <li>lastOrNot(lodgerCount==1)-></li>
    <li>lastOrNot(lodgerCount>=2)->dernier</li>
    <li>lodgersLabelSingularOrPlural(lodgerCount==1)->[lodgersLabel]</li>
    <li>lodgersLabelSingularOrPlural(lodgerCount>=2)->[lodgersLabelPlural]</li>
    <li>lodgersArriveLetterLabel->[lodgersLabelSingularOrPlural] [arrived]</li>
    <li>lodgersArriveLetterText->[lodgersSingularOrPluralDef] [areIs] [arrived]. [lodgersPronoun] [willStay] avec vous pendant [questDurationTicks_duration] afin qu'[lodgersPronoun] [canR] se regrouper et se ressaisir.</li>
    <li>areIs(lodgerCount==1)->est</li>
    <li>areIs(lodgerCount>=2)->sont</li>
    <li>hasHave(lodgerCount==1)->a</li>
    <li>hasHave(lodgerCount>=2)->ont</li>
    <li>arrived(lodgerCount==1,asker_gender==Female)->arrivée</li>
    <li>arrived(lodgerCount==1,asker_gender!=Female)->arrivé</li>
    <li>arrived(lodgerCount>=2)->arrivés</li>
    <li>willStay(lodgerCount==1)->restera</li>
    <li>willStay(lodgerCount>=2)->resteront</li>
    <li>canR(lodgerCount==1)->puisse</li>
    <li>canR(lodgerCount>=2)->puissent</li>
    <li>appalledButNoAction->{PAWNSALIVECOUNT_multiple ? Les autres sont consternés : Le dernier [lodgersLabel] est consterné} par cela, mais {PAWNSALIVECOUNT_multiple ? ils ne prendront : il ne prendra} aucune mesure contre vous.</li>
    <li>othersWillNotAccept->{PAWNSALIVECOUNT_multiple ? Les autres n'acceptent : Le dernier [lodgersLabel] n'accepte} pas cela</li>
    <li>turnedViolent->[othersWillNotAccept], et {PAWNSALIVECOUNT_multiple ? se sont violemment retournés : s'est violemment retourné} contre vous.</li>
    <li>decidedToLeave->[othersWillNotAccept], et {PAWNSALIVECOUNT_multiple ? ont : a } décidé de partir.</li>
    <!-- NOTE: whoAskedToStaySingular is for the last pawn, no matter lodgerCount value is. -->
    <li>whoAskedToStaySingular->qui a demandé à rester avec vous</li>
    <!--
      TODO: Verify if whoAskedToStaySingularOrPlural (mutinyLetterText) depends on PAWNSALIVECOUNT_multiple or on lodgerCount.
        ENGLISH uses lodgerCount.
    -->
    <li>whoAskedToStaySingularOrPlural(lodgerCount==1)->qui a demandé à rester avec vous</li>
    <li>whoAskedToStaySingularOrPlural(lodgerCount>=2)->qui ont demandé à rester avec vous</li>
    <li>oneOfThe->un des [faction_pawnsPlural] désespérés qui a demandé à rester avec vous</li>
    <li>questOver->La quête "[resolvedQuestName]" est terminée.</li>
    <li>letterIntroDeath->{SUBJECT_definite}, [oneOfThe] est mort.</li>
    <li>lodgerDiedMemoryThoughtLetterLabel->[lodgersLabel] mort : colère</li>
    <li>lodgerDiedMemoryThoughtLetterText->[letterIntroDeath]\n\n[appalledButNoAction]</li>
    <li>lodgerDiedAttackPlayerLetterLabel->[lodgersLabel] mort : vengeance</li>
    <li>lodgerDiedAttackPlayerLetterText->[letterIntroDeath]\n\n[turnedViolent]</li>
    <li>lodgerDiedLeaveMapLetterLabel->[lodgersLabel] mort : départ</li>
    <li>lodgerDiedLeaveMapLetterText->[letterIntroDeath]\n\n[decidedToLeave]</li>
    <li>lodgersAllDiedLetterLabel->La quête a échoué</li>
    <li>lodgersAllDiedLetterText->{SUBJECT_definite}, le [lastOrNot] [faction_pawnSingular] désespéré [whoAskedToStaySingular], est mort.\n\n[questOver]</li>
    <li>letterIntroArrested->Vous avez arrêté {SUBJECT_definite}, [oneOfThe].</li>
    <li>lodgerArrestedMemoryThoughtLetterLabel->[lodgersLabel] arrêté : colère</li>
    <li>lodgerArrestedMemoryThoughtLetterText->[letterIntroArrested]\n\n[appalledButNoAction]</li>
    <li>lodgerArrestedAttackPlayerLetterLabel->[lodgersLabel] arrêté : vengeance</li>
    <li>lodgerArrestedAttackPlayerLetterText->[letterIntroArrested]\n\n[turnedViolent]</li>
    <li>lodgerArrestedLeaveMapLetterLabel->[lodgersLabel] arrêté : départ</li>
    <li>lodgerArrestedLeaveMapLetterText->[letterIntroArrested]\n\n[decidedToLeave]</li>
    <li>lodgersAllArrestedLetterLabel->La quête a échoué</li>
    <li>lodgersAllArrestedLetterText->Vous avez arrêté {SUBJECT_definite}, le [lastOrNot] [faction_pawnSingular] désespéré [whoAskedToStaySingular].\n\n[questOver]</li>
    <li>letterIntroViolated->{SUBJECT_definite}, [oneOfThe], a été chirurgicalement violé.</li>
    <li>lodgerViolatedMemoryThoughtLetterLabel->[lodgersLabel] violé : colère</li>
    <li>lodgerViolatedMemoryThoughtLetterText->[letterIntroViolated]\n\n[appalledButNoAction]</li>
    <li>lodgerViolatedAttackPlayerLetterLabel->[lodgersLabel] violé : vengeance</li>
    <li>lodgerViolatedAttackPlayerLetterText->[letterIntroViolated]\n\n[turnedViolent]</li>
    <li>lodgerViolatedLeaveMapLetterLabel->[lodgersLabel] violé : départ</li>
    <li>lodgerViolatedLeaveMapLetterText->[letterIntroViolated]\n\n[decidedToLeave]</li>
    <li>mutinyLetterLabel->Trahison</li>
    <li>mutinyLetterText->[lodgersSingularOrPluralDef] [whoAskedToStaySingularOrPlural] [areIsBetraying] contre vous !\n\nIl semble qu'[lodgersPronoun] [HadPlanifiedSingOrPlural] cette trahison depuis le début.</li>
    <li>areIsBetraying(lodgerCount==1,asker_gender==Female)->s'est retournée</li>
    <li>areIsBetraying(lodgerCount==1,asker_gender!=Female)->s'est retourné</li>
    <li>areIsBetraying(lodgerCount>=2)->se sont retournés</li>
    <li>HadPlanifiedSingOrPlural(lodgerCount==1)->ait planifié</li>
    <li>HadPlanifiedSingOrPlural(lodgerCount>=2)->aient planifié</li>
    <li>hostedSingOrPlural(lodgerCount==1,asker_gender==Female)->hébergée</li>
    <li>hostedSingOrPlural(lodgerCount==1,asker_gender!=Female)->hébergé</li>
    <li>hostedSingOrPlural(lodgerCount>=2)->hébergés</li>
    <li>lodgersLeavingLetterLabel->[lodgersLabelSingularOrPlural] sur le départ</li>
    <li>lodgersLeavingLetterText->{FACTION_leaderNameDef} vous remercie de [lodgersObjectiveIndirect] avoir permis de rester à [map_definite] pendant [questDurationTicks_duration]. {FACTION_leaderPronoun} va maintenant retourner vers son peuple.\n\n{FACTION_leaderNameDef} dit qu'{FACTION_leaderPronoun} n'oubliera pas ce que vous avez fait.</li>
  </Hospitality_Refugee.questContentRules.rulesStrings>
  <!-- EN:
    <li>lodgersLabel->refugee</li>
    <li>lodgersLabelPlural->refugees</li>
  -->
  <Hospitality_Refugee.questDescriptionAndNameRules.rulesStrings>
    <li>lodgersLabel->réfugié</li>
    <li>lodgersLabelPlural->réfugiés</li>
  </Hospitality_Refugee.questDescriptionAndNameRules.rulesStrings>
  <!-- EN:
    <li>offer(lodgerCount==1)->offers</li>
    <li>offer(lodgerCount>=2)->offer</li>
    <li>lodgersPronoun(lodgerCount==1)->[asker_pronoun]</li>
    <li>lodgersPronoun(lodgerCount>=2)->they</li>
    <li>lodgersPreposition(lodgerCount==1)->[asker_objective]self</li>
    <li>lodgersPreposition(lodgerCount>=2)->themselves</li>
    <li>lodgersObjective(lodgerCount==1)->[asker_objective]</li>
    <li>lodgersObjective(lodgerCount>=2)->them</li>
    <li>lodgersPossessive(lodgerCount==1)->[asker_possessive]</li>
    <li>lodgersPossessive(lodgerCount>=2)->their</li>
    <li>lodgersSingularOrPluralDef(lodgerCount==1)->[asker_nameDef]</li>
    <li>lodgersSingularOrPluralDef(lodgerCount>=2)->the [lodgersLabelPlural]</li>
    <li>questDescription->[approachInfo] [claimInfo] [asker_nameDef] begs you for permission to stay at [map_definite] for [questDurationTicks_duration] so [lodgersPronoun] can rest and regroup.\n\nIn return, [lodgersPronoun] [offer] to work and fight for free during that time.\n\n[joinInfo] [lodgersPronoun] may also reward you later for helping [lodgersObjective] - but there is no way to know [lodgersPossessive] true intentions.\n\n[travelerInfo] not part of any faction. If you wish, you can choose to kill, arrest, sell, or harvest [lodgersObjective], without diplomatic consequences.</li>
    <li>approachInfo(lodgerCount==1)->A desperate [faction_pawnSingular] named [asker_nameDef] is approaching.</li>
    <li>approachInfo(lodgerCount==2)->[asker_nameDef] and another desperate [faction_pawnSingular] are approaching.</li>
    <li>approachInfo(lodgerCount==2,childCount==1,priority=1)->[asker_nameDef] is approaching with a child in tow.</li>
    <li>approachInfo(lodgerCount>=3)->[lodgerCount] desperate [faction_pawnsPlural] are approaching. Their leader is called [asker_nameDef].</li>
    <li>approachInfo(lodgerCount>=3,childCount==1,priority=1)->[lodgerCount] desperate [faction_pawnsPlural] including a child are approaching. Their leader is called [asker_nameDef].</li>
    <li>approachInfo(lodgerCount>=3,childCount>=2,priority=1)->[lodgerCount] desperate [faction_pawnsPlural] including some children are approaching. Their leader is called [asker_nameDef].</li>
    <li>approachInfo(lodgerCount>=3,allButOneChildren==true,priority=2)->A group of [lodgerCount] desperate [faction_pawnsPlural] are approaching consisting of [asker_nameDef] and [lodgersCountMinusOne] children [asker_pronoun] has taken under [asker_possessive] wing.</li>
    <li>claimInfo(lodgerCount==1)->[asker_nameDef] claims to have lost [asker_possessive] home in a recent attack.</li>
    <li>claimInfo(lodgerCount==1)->[asker_nameDef] claims to woken up from cryptosleep all alone and friendless.</li>
    <li>claimInfo(lodgerCount==1)->[asker_nameDef] claims to have been chased from [asker_possessive] home by a vengeful ex-lover.</li>
    <li>claimInfo(lodgerCount==1)->[asker_nameDef] claims to have been banished after an argument with a village leader.</li>
    <li>claimInfo(lodgerCount>=2)->They claim to have lost their home in a recent attack.</li>
    <li>claimInfo(lodgerCount>=2)->They claim to have escaped an organ harvesting operation.</li>
    <li>claimInfo(lodgerCount>=2)->They say they escaped from a slave caravan.</li>
    <li>claimInfo(lodgerCount>=2)->They say that crop blights starved them out of their village.</li>
    <li>claimInfo(lodgerCount>=2)->They say a great flashstorm burned down their home.</li>
    <li>claimInfo(lodgerCount>=2)->They say their caravan was ambushed and everything was taken.</li>
    <li>claimInfo(lodgerCount>=2)->They say they were banished from their town due to moral disagreements.</li>
    <li>joinInfo(lodgerCount==1)->If you make [asker_objective] happy, [asker_pronoun] may offer to join you.</li>
    <li>joinInfo(lodgerCount>=2)->If you make them happy, some of them may offer to join you.</li>
    <li>travelerInfo(lodgerCount==1)->This [faction_pawnSingular] is</li>
    <li>travelerInfo(lodgerCount>=2)->These [faction_pawnsPlural] are</li>
  -->
  <Hospitality_Refugee.questDescriptionRules.rulesStrings>
    <li>offer(lodgerCount==1)->offre</li>
    <li>offer(lodgerCount>=2)->offrent</li>
    <li>mayAlso(lodgerCount==1)->pourrait</li>
    <li>mayAlso(lodgerCount>=2)->pourraient</li>
    <li>asker_accusative(asker_gender==Male)->le</li>
    <li>asker_accusative(asker_gender==Female)->la</li>
    <li>asker_accusative(asker_gender==None)->le</li>
    <li>asker_happy(asker_gender==Male)->heureux</li>
    <li>asker_happy(asker_gender==Female)->heureuse</li>
    <li>asker_happy(asker_gender==None)->heureux</li>
    <li>lodgersPronoun(lodgerCount==1)->[asker_pronoun]</li>
    <li>lodgersPronoun(lodgerCount>=2)->ils</li>
    <li>lodgersPreposition(lodgerCount==1)->[asker_objective]-même</li>
    <li>lodgersPreposition(lodgerCount>=2)->eux-même</li>
    <!-- NOTE; the declarations in /Royalty/DefInjected/RulePackDef/Script_Hospitality_TextCommon.xml
        are NOT sufficient. Here, lodgers0 is undefined (== asker) and the constant is "lodgerCount"
        instead of lodgersCount -->
    <li>lodgersObjective(lodgerCount==1)->[asker_objective]</li>
    <li>lodgersObjective(lodgerCount>=2)->eux</li>
    <li>lodgersObjectiveIndirect(lodgerCount==1)->lui</li>
    <li>lodgersObjectiveIndirect(lodgerCount>=2)->leur</li>
    <li>lodgersAccusative(lodgerCount==1)->[asker_accusative]</li>
    <li>lodgersAccusative(lodgerCount>=2)->les</li>
    <!-- NOTE: pour "ses/leurs organes" -->
    <li>lodgersPossessivePlural(lodgerCount==1)->ses</li>
    <li>lodgersPossessivePlural(lodgerCount>=2)->leurs</li>
    <li>lodgersSingularOrPluralDef(lodgerCount==1)->[asker_nameDef]</li>
    <li>lodgersSingularOrPluralDef(lodgerCount>=2)->les [lodgersLabelPlural]</li>
    <!-- NOTE: "de [lodgersAccusative]" utilise un espace insécable pour éviter l'élision "de le->du" -->
    <li>questDescription->[approachInfo] [claimInfo] [asker_nameDef] vous demande la permission de rester à [map_definite] pour [questDurationTicks_duration] afin de pouvoir se reposer et se ressaisir.\n\nEn retour, [lodgersPronoun] [offer] de travailler et de se battre gratuitement pendant cette période.\n\n[joinInfo] [lodgersPronoun] [mayAlso] également vous récompenser plus tard pour votre aide, mais il n'y a aucun moyen de savoir s'il y a des intentions cachées.\n\n[travelerInfo] partie d'aucune faction. Si vous le souhaitez, vous pouvez choisir de [lodgersAccusative] tuer, de [lodgersAccusative] capturer, de [lodgersAccusative] vendre ou de [lodgersObjectiveIndirect] prélever des organes, et ceci sans aucune conséquence diplomatique.</li>
    <li>approachInfo(lodgerCount==1,asker_gender==Female)->Une [asker_kind] désespérée nommée [asker_nameDef] approche.</li>
    <li>approachInfo(lodgerCount==1,asker_gender!=Female)->Un [asker_kind] désespéré nommé [asker_nameDef] approche.</li>
    <li>approachInfo(lodgerCount==2)->[asker_nameDef] et un autre [faction_pawnSingular] désespéré approchent.</li>
    <li>approachInfo(lodgerCount==2,childCount==1,priority=1)->[asker_nameDef] approche avec un enfant dans les bras.</li>
    <li>approachInfo(lodgerCount>=3)->[lodgerCount] [faction_pawnsPlural] désespérés approchent. leur chef se nomme [asker_nameDef].</li>
    <li>approachInfo(lodgerCount>=3,childCount==1,priority=1)->[lodgerCount] [faction_pawnsPlural] désespérés avec un enfant approchent. leur chef se nomme [asker_nameDef].</li>
    <li>approachInfo(lodgerCount>=3,childCount>=2,priority=1)->[lodgerCount] [faction_pawnsPlural] désespérés avec des enfants approchent. leur chef se nomme [asker_nameDef].</li>
    <li>approachInfo(lodgerCount>=3,allButOneChildren==true,priority=2)->Un groupe de [lodgerCount] [faction_pawnsPlural] désespérés s'approche, composé de [asker_nameDef] et de [lodgersCountMinusOne] enfants qu'[asker_pronoun] a pris sous ses ailes.</li>
    <li>claimInfo(lodgerCount==1)->[asker_nameDef] affirme avoir perdu son domicile lors d'une récente attaque.</li>
    <li>claimInfo(lodgerCount==1,asker_gender==Female)->[asker_nameDef] prétend sortir de crypto-sommeil seule et sans amis.</li>
    <li>claimInfo(lodgerCount==1,asker_gender!=Female)->[asker_nameDef] prétend sortir de crypto-sommeil seul et sans amis.</li>
    <li>claimInfo(lodgerCount==1,asker_gender==Female)->[asker_nameDef] prétend fuir de sa maison occupée par un ex-amant violent.</li>
    <li>claimInfo(lodgerCount==1,asker_gender!=Female)->[asker_nameDef] prétend fuir de sa maison occupée par une ex-amante violente.</li>
    <li>claimInfo(lodgerCount==1)->[asker_nameDef] prétend être en fuite après une dispute avec un chef de village.</li>
    <li>claimInfo(lodgerCount>=2)->Ils affirment avoir perdu leur maison lors d'une récente attaque.</li>
    <li>claimInfo(lodgerCount>=2)->Ils affirment avoir échappé à une opération de prélèvement d'organes.</li>
    <li>claimInfo(lodgerCount>=2)->Ils disent qu'ils se sont échappés d'une caravane d'esclaves.</li>
    <li>claimInfo(lodgerCount>=2)->Ils disent que des incendies dans leurs cultures les ont affamés et les ont obligés à quitter leur village.</li>
    <li>claimInfo(lodgerCount>=2)->Ils disent qu'une grande tempête d'éclairs a brûlé leur maison.</li>
    <li>claimInfo(lodgerCount>=2)->Ils disent que leur caravane a été prise en embuscade et que tous leurs biens ont été volés.</li>
    <li>claimInfo(lodgerCount>=2)->Ils disent avoir été bannis de leur ville en raison de désaccords moraux.</li>
    <li>joinInfo(lodgerCount==1)->Si vous [asker_accusative] rendez [asker_happy], [asker_pronoun] peut proposer de vous rejoindre.</li>
    <li>joinInfo(lodgerCount>=2)->Si vous les rendez heureux, certains d'entre eux peuvent vous proposer de vous rejoindre.</li>
    <li>travelerInfo(lodgerCount==1,asker_gender==Female)->Cette [asker_kind] ne fait</li>
    <li>travelerInfo(lodgerCount==1,asker_gender!=Female)->Ce [asker_kind] ne fait</li>
    <li>travelerInfo(lodgerCount>=2)->Ces [faction_pawnsPlural] ne font</li>
  </Hospitality_Refugee.questDescriptionRules.rulesStrings>
  <!-- EN:
    <li>questName(lodgerCount==1)->[asker_nameDef] the [lodgerAdj]</li>
    <li>questName(lodgerCount==1)->[athe] [lodgerAdj] [lodgerSingle]</li>
    <li>questName(p=2,lodgerCount>=2)->[lodgerAdj] [lodgerPlural]</li>
    <li>questName(lodgerCount>=2)->[asker_nameDef]'s [lodgerAdj] [lodgerPlural]</li>
    <li>questName(lodgerCount>=2)->[asker_nameDef]'s [lodgerPlural]</li>
    <li>athe->a</li>
    <li>athe->the</li>
    <li>lodgerAdj->tired</li>
    <li>lodgerAdj->lost</li>
    <li>lodgerAdj->destitute</li>
    <li>lodgerAdj->poor</li>
    <li>lodgerAdj->desperate</li>
    <li>lodgerAdj->sad</li>
    <li>lodgerAdj->dusty</li>
    <li>lodgerAdj->hopeless</li>
    <li>lodgerAdj->unknown</li>
    <li>lodgerAdj->forlorn</li>
    <li>lodgerAdj->forsaken</li>
    <li>lodgerSingle->traveler</li>
    <li>lodgerSingle->refugee</li>
    <li>lodgerSingle->drifter</li>
    <li>lodgerSingle->survivor</li>
    <li>lodgerSingle->nomad</li>
    <li>lodgerSingle->vagabond</li>
    <li>lodgerPlural->travelers</li>
    <li>lodgerPlural->refugees</li>
    <li>lodgerPlural->drifters</li>
    <li>lodgerPlural->survivors</li>
    <li>lodgerPlural->nomads</li>
    <li>lodgerPlural->vagabonds</li>
  -->
  <Hospitality_Refugee.questNameRules.rulesStrings>
    <li>questName(lodgerCount==1,asker_gender==Female)->[asker_nameDef] la [lodgerAdj_fem]</li>
    <li>questName(lodgerCount==1,asker_gender!=Female)->[asker_nameDef] le [lodgerAdj]</li>
    <li>questName(lodgerCount==1,asker_gender==Female)->[athe_fem] [lodgerSingle_fem] [lodgerAdj_fem]</li>
    <li>questName(lodgerCount==1,asker_gender!=Female)->[athe] [lodgerSingle] [lodgerAdj]</li>
    <li>questName(p=2,lodgerCount>=2)->des [lodgerPlural] [lodgerAdjPlural]</li>
    <li>questName(lodgerCount>=2)->les [lodgerPlural] [lodgerAdjPlural] de [asker_nameDef]</li>
    <li>questName(lodgerCount>=2)->les [lodgerPlural] de [asker_nameDef]</li>
    <li>athe->un</li>
    <li>athe->le</li>
    <li>athe_fem->une</li>
    <li>athe_fem->la</li>
    <li>lodgerAdj->fatigué</li>
    <li>lodgerAdj->perdu</li>
    <li>lodgerAdj->indigent</li>
    <li>lodgerAdj->pauvre</li>
    <li>lodgerAdj->désespéré</li>
    <li>lodgerAdj->triste</li>
    <li>lodgerAdj->poussiéreux</li>
    <li>lodgerAdj->désespéré</li>
    <li>lodgerAdj->inconnu</li>
    <li>lodgerAdj->délaissé</li>
    <li>lodgerAdj->négligé</li>
    <li>lodgerAdj_fem->fatiguée</li>
    <li>lodgerAdj_fem->perdue</li>
    <li>lodgerAdj_fem->indigente</li>
    <li>lodgerAdj_fem->pauvre</li>
    <li>lodgerAdj_fem->désespérée</li>
    <li>lodgerAdj_fem->triste</li>
    <li>lodgerAdj_fem->poussiéreuse</li>
    <li>lodgerAdj_fem->désespérée</li>
    <li>lodgerAdj_fem->inconnue</li>
    <li>lodgerAdj_fem->délaissée</li>
    <li>lodgerAdj_fem->négligée</li>
    <li>lodgerAdjPlural->fatigués</li>
    <li>lodgerAdjPlural->perdus</li>
    <li>lodgerAdjPlural->indigents</li>
    <li>lodgerAdjPlural->pauvres</li>
    <li>lodgerAdjPlural->désespérés</li>
    <li>lodgerAdjPlural->tristes</li>
    <li>lodgerAdjPlural->poussiéreux</li>
    <li>lodgerAdjPlural->désespérés</li>
    <li>lodgerAdjPlural->inconnus</li>
    <li>lodgerAdjPlural->délaissés</li>
    <li>lodgerAdjPlural->négligés</li>
    <li>lodgerSingle->voyageur</li>
    <li>lodgerSingle->réfugié</li>
    <li>lodgerSingle->errant</li>
    <li>lodgerSingle->survivant</li>
    <li>lodgerSingle->nomade</li>
    <li>lodgerSingle->vagabond</li>
    <li>lodgerSingle_fem->voyageuse</li>
    <li>lodgerSingle_fem->réfugiée</li>
    <li>lodgerSingle_fem->errante</li>
    <li>lodgerSingle_fem->survivante</li>
    <li>lodgerSingle_fem->nomade</li>
    <li>lodgerSingle_fem->vagabonde</li>
    <li>lodgerPlural->voyageurs</li>
    <li>lodgerPlural->réfugiés</li>
    <li>lodgerPlural->errants</li>
    <li>lodgerPlural->survivants</li>
    <li>lodgerPlural->nomades</li>
    <li>lodgerPlural->vagabonds</li>
  </Hospitality_Refugee.questNameRules.rulesStrings>
  
  <!-- EN:
    <li>lodgersLabelSingularOrPlural(lodgerCount==1)->[lodgersLabel]</li>
    <li>lodgersLabelSingularOrPlural(lodgerCount>=2)->[lodgersLabelPlural]</li>
    <li>betrayalOfferRewardLetterLabel->Betrayal reward: [factionOpponent_nameDef]</li>
    <li>betrayalOfferRewardLetterText->[factionOpponent_nameDef] promised you a reward if you killed [asker_nameDef] [otherMembers]. [factionOpponent_pronoun] has heard news this has been done and is sending you the following via drop pod (total value [betrayalRewardMarketValue_money]):\n\n[betrayalRewards].\n\n[questOver]</li>
    <li>betrayalOfferFailedBecauseRecruitedLetterLabel->Betrayal reward retracted</li>
    <li>betrayalOfferFailedBecauseRecruitedLetterText->[factionOpponent_nameDef] has learned that all surviving members of the [faction_name] have joined your faction! [factionOpponent_nameDef] wanted all members of the [faction_name] to die and has therefore retracted [factionOpponent_possessive] offer.</li>
    <li>betrayalOfferFailedLetterLabel->Betrayal reward retracted</li>
    <li>betrayalOfferFailedLetterText->[factionOpponent_nameDef] has learned that one of the members of the [faction_name] is no longer at [map_definite]. [factionOpponent_nameDef] wanted all members of the [faction_name] to die and has therefore retracted [factionOpponent_possessive] offer.</li>
    <li>otherLodgers(lodgerCount==1)-></li>
    <li>otherLodgers(lodgerCount==2)->and another [lodgersLabel]</li>
    <li>otherLodgers(lodgerCount>=3)->and several [lodgersLabelPlural]</li>
    <li>otherMembers(lodgerCount==1)-></li>
    <li>otherMembers(lodgerCount>=2)-> and all other members of the [faction_name]</li>
    <li>questOver->The quest '[resolvedQuestName]' is over.</li>
  -->
  <RefugeeBetrayal.questContentRules.rulesStrings>
    <li>lodgersLabelSingularOrPlural(lodgerCount==1)->[lodgersLabel]</li>
    <li>lodgersLabelSingularOrPlural(lodgerCount>=2)->[lodgersLabelPlural]</li>
    <li>betrayalOfferRewardLetterLabel->Récompense de trahison : [factionOpponent_nameDef]</li>
    <li>betrayalOfferRewardLetterText->[factionOpponent_nameDef] vous avait promis une récompense si vous veniez à tuer [asker_nameDef] [otherMembers]. [factionOpponent_pronoun] a appris de source sûre que cela avait bien été fait et vous envoie ce qui suit via une nacelle de transport (valeur totale [betrayalRewardMarketValue_money]) :\n\n[betrayalRewards].\n\n[questOver]</li>
    <li>betrayalOfferFailedBecauseRecruitedLetterLabel->Récompense de trahison annulée</li>
    <li>betrayalOfferFailedBecauseRecruitedLetterText->[factionOpponent_nameDef] a appris que tous les membres survivants de [faction_name] ont rejoint votre faction ! [factionOpponent_nameDef] souhaitait la mort de tous les membres de [faction_name] et a donc annulé son offre.</li>
    <li>betrayalOfferFailedLetterLabel->Récompense de trahison annulée</li>
    <li>betrayalOfferFailedLetterText->[factionOpponent_nameDef] a appris que l'un des membres de [faction_name] n'est plus à [map_definite]. [factionOpponent_nameDef] voulait voir tous les membres de [faction_name] morts et a donc annulé son offre.</li>
    <li>otherLodgers(lodgerCount==1)-></li>
    <li>otherLodgers(lodgerCount==2)->et un autre [lodgersLabel]</li>
    <li>otherLodgers(lodgerCount>=3)->et plusieurs [lodgersLabelPlural]</li>
    <li>otherMembers(lodgerCount==1)-></li>
    <li>otherMembers(lodgerCount>=2)-> et tous les autres membres de [faction_name]</li>
    <li>questOver->La quête "[resolvedQuestName]" est terminée.</li>
  </RefugeeBetrayal.questContentRules.rulesStrings>
  <!-- EN:
    <li>lodgersLabel->refugee</li>
    <li>lodgersLabelPlural->refugees</li>
  -->
  <RefugeeBetrayal.questDescriptionAndNameRules.rulesStrings>
    <li>lodgersLabel->réfugié</li>
    <li>lodgersLabel_fem->réfugiée</li>
    <li>lodgersLabelPlural->réfugiés</li>
  </RefugeeBetrayal.questDescriptionAndNameRules.rulesStrings>
  <!-- EN:
    <li>questDescription->[factionOpponent_nameDef], a [factionOpponent_faction_pawnSingular] of [factionOpponent_faction_name], has learned that [asker_nameDef] [otherLodgers] [areIs] being hosted at [map_definite]. [factionOpponent_pronoun] is enemies with [asker_nameDef] and wants to see [asker_objective] dead.\n\n[factionOpponent_pronoun] will send you the following reward if you kill all members of [faction_name] (total value [betrayalRewardMarketValue_money]):\n\n[betrayalRewards]</li>
    <li>lodgersLabelSingularOrPlural(lodgerCount==1)->[lodgersLabel]</li>
    <li>lodgersLabelSingularOrPlural(lodgerCount>=2)->[lodgersLabelPlural]</li>
    <li>otherLodgers(lodgerCount==1)-></li>
    <li>otherLodgers(lodgerCount==2)->and another [lodgersLabel]</li>
    <li>otherLodgers(lodgerCount>=3)->and several [lodgersLabelPlural]</li>
    <li>otherMembers(lodgerCount==1)-></li>
    <li>otherMembers(lodgerCount>=2)-> and all other members of the [faction_name]</li>
    <li>areIs(lodgerCount==1)->is</li>
    <li>areIs(lodgerCount>=2)->are</li>
  -->
  <RefugeeBetrayal.questDescriptionRules.rulesStrings>
    <li>questDescription->[factionOpponent_nameDef], [factionOpponent_kindIndef] de [factionOpponent_faction_name], a appris que [asker_nameDef] [otherLodgers] [areIs] [hostedSingOrPlural] à [map_definite]. [factionOpponent_pronoun] est [enemyIndef] de [asker_nameDef] et veut [asker_accusative] voir [asker_dead].\n\n[factionOpponent_pronoun] vous enverra la récompense suivante si vous tuez tous les membres de [faction_name] (valeur totale [betrayalRewardMarketValue_money]) :\n\n[betrayalRewards]</li>
    <li>lodgersLabelSingularOrPlural(lodgerCount==1)->[lodgersLabel]</li>
    <li>lodgersLabelSingularOrPlural(lodgerCount>=2)->[lodgersLabelPlural]</li>
    <li>factionOpponent_kindIndef(factionOpponent_gender==Female)->une [factionOpponent_kind]</li>
    <li>factionOpponent_kindIndef(factionOpponent_gender!=Female)->un [factionOpponent_kind]</li>
    <li>enemyIndef(factionOpponent_gender==Female)->une ennemie</li>
    <li>enemyIndef(factionOpponent_gender!=Female)->un ennemi</li>
    <li>asker_accusative(lodgerCount==1,asker_gender==Female)->la</li>
    <li>asker_accusative(lodgerCount==1,asker_gender!=Female)->le</li>
    <li>asker_accusative(lodgerCount>=2)->les</li>
    <li>asker_dead(lodgerCount==1,asker_gender==Female)->morte</li>
    <li>asker_dead(lodgerCount==1,asker_gender!=Female)->mort</li>
    <li>asker_dead(lodgerCount>=2)->morts</li>
    <li>otherLodgers(lodgerCount==1)-></li>
    <li>otherLodgers(lodgerCount==2)->et un autre [lodgersLabel]</li>
    <li>otherLodgers(lodgerCount>=3)->et plusieurs [lodgersLabelPlural]</li>
    <li>otherMembers(lodgerCount==1)-></li>
    <li>otherMembers(lodgerCount>=2)-> et tous les autres membres de [faction_name]</li>
    <li>areIs(lodgerCount==1)->est</li>
    <li>areIs(lodgerCount>=2)->sont</li>
    <li>hostedSingOrPlural(lodgerCount==1,asker_gender==Female)->hébergée</li>
    <li>hostedSingOrPlural(lodgerCount==1,asker_gender!=Female)->hébergé</li>
    <li>hostedSingOrPlural(lodgerCount>=2)->hébergés</li>
  </RefugeeBetrayal.questDescriptionRules.rulesStrings>
  <!-- EN:
    <li>questName->Betrayal offer: [factionOpponent_nameDef]</li>
  -->
  <RefugeeBetrayal.questNameRules.rulesStrings>
    <li>questName->Proposition de trahison : [factionOpponent_nameDef]</li>
  </RefugeeBetrayal.questNameRules.rulesStrings>
  
  <!-- EN:
    <li>rewardLetterLabel->Hospitality reward</li>
    <li>rewardLetterText->[rewardGiver_nameDef] has contacted you. [rewardDelayTicks_duration] ago, you helped [rewardGiver_objective] in desperate circumstances.\n\nSince then, [rewardGiver_pronoun] has gotten back on [rewardGiver_possessive] feet, and now [rewardGiver_pronoun] wants to reward you properly for your help. [rewardGiver_pronoun] is sending you the following via drop pod:\n\n[listOfRewards]</li>
  -->
  <RefugeeDelayedReward.questContentRules.rulesStrings>
    <li>rewardLetterLabel->Récompense d'accueil</li>
    <li>rewardLetterText->[rewardGiver_nameDef] vous a contacté. il y a [rewardDelayTicks_duration], vous l'avez aidé dans des circonstances désespérées.\n\nDepuis, [rewardGiver_pronoun] a repris pied, et maintenant [rewardGiver_pronoun] veut vous récompenser convenablement pour votre aide. [rewardGiver_pronoun] vous envoie ce qui suit via une capsule de largage :\n\n[listOfRewards]</li>
  </RefugeeDelayedReward.questContentRules.rulesStrings>
  <!-- EN:
    <li>questDescription->a delayed reward for refugee quest</li>
  -->
  <RefugeeDelayedReward.questDescriptionRules.rulesStrings>
    <li>une récompense différée pour la quête du réfugié</li>
  </RefugeeDelayedReward.questDescriptionRules.rulesStrings>
  <!-- EN:
    <li>questName->Refugee delayed reward</li>
  -->
  <RefugeeDelayedReward.questNameRules.rulesStrings>
    <li>questName->Récompense différée du réfugié</li>
  </RefugeeDelayedReward.questNameRules.rulesStrings>
  
</LanguageData>