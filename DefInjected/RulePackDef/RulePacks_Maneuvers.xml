<?xml version="1.0" encoding="utf-8"?>
<LanguageData>

  <Maneuver_Slash.rulePack.rulesStrings.0>damaged_inf(p=4)->slash</Maneuver_Slash.rulePack.rulesStrings.0>
  <Maneuver_Slash.rulePack.rulesStrings.1>damaged_inf->cut</Maneuver_Slash.rulePack.rulesStrings.1>
  <Maneuver_Slash.rulePack.rulesStrings.2>damaged_inf->chop</Maneuver_Slash.rulePack.rulesStrings.2>
  <Maneuver_Slash.rulePack.rulesStrings.3>damaged_inf->hack</Maneuver_Slash.rulePack.rulesStrings.3>
  <Maneuver_Slash.rulePack.rulesStrings.4>damaged_inf->slice</Maneuver_Slash.rulePack.rulesStrings.4>
  <Maneuver_Slash.rulePack.rulesStrings.5>damaged_inf(deflected!=True)->gash</Maneuver_Slash.rulePack.rulesStrings.5>
  <Maneuver_Slash.rulePack.rulesStrings.6>damaged_past(p=4)->slashed</Maneuver_Slash.rulePack.rulesStrings.6>
  <Maneuver_Slash.rulePack.rulesStrings.7>damaged_past->cut</Maneuver_Slash.rulePack.rulesStrings.7>
  <Maneuver_Slash.rulePack.rulesStrings.8>damaged_past->chopped</Maneuver_Slash.rulePack.rulesStrings.8>
  <Maneuver_Slash.rulePack.rulesStrings.9>damaged_past->hacked</Maneuver_Slash.rulePack.rulesStrings.9>
  <Maneuver_Slash.rulePack.rulesStrings.10>damaged_past->sliced</Maneuver_Slash.rulePack.rulesStrings.10>
  <Maneuver_Slash.rulePack.rulesStrings.11>damaged_past(deflected!=True)->gashed</Maneuver_Slash.rulePack.rulesStrings.11>
  <Maneuver_Slash.rulePack.rulesStrings.12>damaged_present->slashing</Maneuver_Slash.rulePack.rulesStrings.12>
  <Maneuver_Slash.rulePack.rulesStrings.13>damaged_present->cutting</Maneuver_Slash.rulePack.rulesStrings.13>
  <Maneuver_Slash.rulePack.rulesStrings.14>damaged_present->slicing</Maneuver_Slash.rulePack.rulesStrings.14>
  <Maneuver_Slash.rulePack.rulesStrings.15>damaged_present(deflected!=True)->gashing</Maneuver_Slash.rulePack.rulesStrings.15>
  <Maneuver_Slash.rulePack.rulesStrings.16>damaged_present(deflected!=True)->tearing</Maneuver_Slash.rulePack.rulesStrings.16>
  <Maneuver_Slash.rulePack.rulesStrings.17>damaged_present(deflected!=True)->lacerating</Maneuver_Slash.rulePack.rulesStrings.17>
  <Maneuver_Slash.rulePack.rulesStrings.18>woundname->wound</Maneuver_Slash.rulePack.rulesStrings.18>
  <Maneuver_Slash.rulePack.rulesStrings.19>woundname(p=0.3)->opening</Maneuver_Slash.rulePack.rulesStrings.19>
  <Maneuver_Slash.rulePack.rulesStrings.20>flavortext_situation(recipient_flesh!=Mechanoid)->with blood dripping from the [woundname]</Maneuver_Slash.rulePack.rulesStrings.20>
  <Maneuver_Slash.rulePack.rulesStrings.21>flavortext_situation->with fluids dripping from the [woundname]</Maneuver_Slash.rulePack.rulesStrings.21>
  <Maneuver_Slash.rulePack.rulesStrings.22>flavortext_consequence(recipient_flesh!=Mechanoid)->exposing the flesh underneath</Maneuver_Slash.rulePack.rulesStrings.22>
  <Maneuver_Slash.rulePack.rulesStrings.23>flavortext_consequence(recipient_flesh==Mechanoid)->exposing the machinery underneath</Maneuver_Slash.rulePack.rulesStrings.23>
  <Maneuver_Slash.rulePack.rulesStrings.24>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a gory [woundname]</Maneuver_Slash.rulePack.rulesStrings.24>
  <Maneuver_Slash.rulePack.rulesStrings.25>destroyed_past->bisected</Maneuver_Slash.rulePack.rulesStrings.25>
  <Maneuver_Slash.rulePack.rulesStrings.26>destroyed_past->divided</Maneuver_Slash.rulePack.rulesStrings.26>
  <Maneuver_Slash.rulePack.rulesStrings.27>destroyed_past->halved</Maneuver_Slash.rulePack.rulesStrings.27>
  <Maneuver_Slash.rulePack.rulesStrings.28>destroyed_past->separated</Maneuver_Slash.rulePack.rulesStrings.28>
  <Maneuver_Slash.rulePack.rulesStrings.29>destroyed_past->split</Maneuver_Slash.rulePack.rulesStrings.29>
  <Maneuver_Slash.rulePack.rulesStrings.30>destroyed_present->bisecting</Maneuver_Slash.rulePack.rulesStrings.30>
  <Maneuver_Slash.rulePack.rulesStrings.31>destroyed_present->dividing</Maneuver_Slash.rulePack.rulesStrings.31>
  <Maneuver_Slash.rulePack.rulesStrings.32>destroyed_present->halving</Maneuver_Slash.rulePack.rulesStrings.32>
  <Maneuver_Slash.rulePack.rulesStrings.33>destroyed_present->separating</Maneuver_Slash.rulePack.rulesStrings.33>
  <Maneuver_Slash.rulePack.rulesStrings.34>destroyed_present->splitting</Maneuver_Slash.rulePack.rulesStrings.34>
  <Maneuver_Slash.rulePack.rulesStrings.35>destroyed_suffix->into neat pieces</Maneuver_Slash.rulePack.rulesStrings.35>
  <Maneuver_Slash.rulePack.rulesStrings.36>destroyed_suffix->cleanly</Maneuver_Slash.rulePack.rulesStrings.36>
  <Maneuver_Slash.rulePack.rulesStrings.37>destroyed_suffix(target_part_destroyed_count==1)->exposing its inner workings</Maneuver_Slash.rulePack.rulesStrings.37>
  <Maneuver_Slash.rulePack.rulesStrings.38>destroyed_suffix(target_part_destroyed_count==1)->slicing it in twain</Maneuver_Slash.rulePack.rulesStrings.38>

  <Maneuver_Stab.rulePack.rulesStrings.0>damaged_inf(p=4)->stab</Maneuver_Stab.rulePack.rulesStrings.0>
  <Maneuver_Stab.rulePack.rulesStrings.1>damaged_inf->jab</Maneuver_Stab.rulePack.rulesStrings.1>
  <Maneuver_Stab.rulePack.rulesStrings.2>damaged_inf(deflected!=True)->pierce</Maneuver_Stab.rulePack.rulesStrings.2>
  <Maneuver_Stab.rulePack.rulesStrings.3>damaged_inf(deflected!=True)->puncture</Maneuver_Stab.rulePack.rulesStrings.3>
  <Maneuver_Stab.rulePack.rulesStrings.4>damaged_inf(deflected!=True)->skewer</Maneuver_Stab.rulePack.rulesStrings.4>
  <Maneuver_Stab.rulePack.rulesStrings.5>damaged_past(p=4)->stabbed</Maneuver_Stab.rulePack.rulesStrings.5>
  <Maneuver_Stab.rulePack.rulesStrings.6>damaged_past->jabbed</Maneuver_Stab.rulePack.rulesStrings.6>
  <Maneuver_Stab.rulePack.rulesStrings.7>damaged_past(deflected!=True)->pierced</Maneuver_Stab.rulePack.rulesStrings.7>
  <Maneuver_Stab.rulePack.rulesStrings.8>damaged_past(deflected!=True)->punctured</Maneuver_Stab.rulePack.rulesStrings.8>
  <Maneuver_Stab.rulePack.rulesStrings.9>damaged_past(deflected!=True)->skewered</Maneuver_Stab.rulePack.rulesStrings.9>
  <Maneuver_Stab.rulePack.rulesStrings.10>damaged_present(deflected!=True)->piercing</Maneuver_Stab.rulePack.rulesStrings.10>
  <Maneuver_Stab.rulePack.rulesStrings.11>damaged_present(deflected!=True)->puncturing</Maneuver_Stab.rulePack.rulesStrings.11>
  <Maneuver_Stab.rulePack.rulesStrings.12>damaged_present(deflected!=True)->penetrating</Maneuver_Stab.rulePack.rulesStrings.12>
  <Maneuver_Stab.rulePack.rulesStrings.13>damaged_present(deflected!=True)->skewering</Maneuver_Stab.rulePack.rulesStrings.13>
  <Maneuver_Stab.rulePack.rulesStrings.14>woundname->hole</Maneuver_Stab.rulePack.rulesStrings.14>
  <Maneuver_Stab.rulePack.rulesStrings.15>woundname->wound</Maneuver_Stab.rulePack.rulesStrings.15>
  <Maneuver_Stab.rulePack.rulesStrings.16>woundname->crevice</Maneuver_Stab.rulePack.rulesStrings.16>
  <Maneuver_Stab.rulePack.rulesStrings.17>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a bloody [woundname]</Maneuver_Stab.rulePack.rulesStrings.17>
  <Maneuver_Stab.rulePack.rulesStrings.18>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a torn [woundname]</Maneuver_Stab.rulePack.rulesStrings.18>
  <Maneuver_Stab.rulePack.rulesStrings.19>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a bleeding [woundname]</Maneuver_Stab.rulePack.rulesStrings.19>
  <Maneuver_Stab.rulePack.rulesStrings.20>destroyed_past->impaled</Maneuver_Stab.rulePack.rulesStrings.20>
  <Maneuver_Stab.rulePack.rulesStrings.21>destroyed_past->perforated</Maneuver_Stab.rulePack.rulesStrings.21>
  <Maneuver_Stab.rulePack.rulesStrings.22>destroyed_past->skewered</Maneuver_Stab.rulePack.rulesStrings.22>
  <Maneuver_Stab.rulePack.rulesStrings.23>destroyed_present->impaling</Maneuver_Stab.rulePack.rulesStrings.23>
  <Maneuver_Stab.rulePack.rulesStrings.24>destroyed_present->perforating</Maneuver_Stab.rulePack.rulesStrings.24>
  <Maneuver_Stab.rulePack.rulesStrings.25>destroyed_present->skewering</Maneuver_Stab.rulePack.rulesStrings.25>
  <Maneuver_Stab.rulePack.rulesStrings.26>destroyed_suffix->straight through</Maneuver_Stab.rulePack.rulesStrings.26>
  <Maneuver_Stab.rulePack.rulesStrings.27>destroyed_suffix->leaving a clean hole</Maneuver_Stab.rulePack.rulesStrings.27>
  <Maneuver_Stab.rulePack.rulesStrings.28>destroyed_suffix(recipient_flesh!=Mechanoid,target_part_destroyed_count==1)->leaving it leaking gory fluids</Maneuver_Stab.rulePack.rulesStrings.28>
  <Maneuver_Stab.rulePack.rulesStrings.29>destroyed_suffix(target_part_destroyed_count==1)->leaving it leaking unrecognizable fluids</Maneuver_Stab.rulePack.rulesStrings.29>

  <Maneuver_Smash_Damage.rulePack.rulesStrings.0>damaged_inf(p=4)->smash</Maneuver_Smash_Damage.rulePack.rulesStrings.0>
  <Maneuver_Smash_Damage.rulePack.rulesStrings.1>damaged_inf->bash</Maneuver_Smash_Damage.rulePack.rulesStrings.1>
  <Maneuver_Smash_Damage.rulePack.rulesStrings.2>damaged_inf->clobber</Maneuver_Smash_Damage.rulePack.rulesStrings.2>
  <Maneuver_Smash_Damage.rulePack.rulesStrings.3>damaged_inf->slam</Maneuver_Smash_Damage.rulePack.rulesStrings.3>
  <Maneuver_Smash_Damage.rulePack.rulesStrings.4>damaged_inf->strike</Maneuver_Smash_Damage.rulePack.rulesStrings.4>
  <Maneuver_Smash_Damage.rulePack.rulesStrings.5>damaged_past(p=4)->smashed</Maneuver_Smash_Damage.rulePack.rulesStrings.5>
  <Maneuver_Smash_Damage.rulePack.rulesStrings.6>damaged_past->bashed</Maneuver_Smash_Damage.rulePack.rulesStrings.6>
  <Maneuver_Smash_Damage.rulePack.rulesStrings.7>damaged_past->clobbered</Maneuver_Smash_Damage.rulePack.rulesStrings.7>
  <Maneuver_Smash_Damage.rulePack.rulesStrings.8>damaged_past->slammed</Maneuver_Smash_Damage.rulePack.rulesStrings.8>
  <Maneuver_Smash_Damage.rulePack.rulesStrings.9>damaged_past->struck</Maneuver_Smash_Damage.rulePack.rulesStrings.9>
  <Maneuver_Smash_Damage.rulePack.rulesStrings.10>damaged_present->smashing</Maneuver_Smash_Damage.rulePack.rulesStrings.10>
  <Maneuver_Smash_Damage.rulePack.rulesStrings.11>damaged_present->bashing</Maneuver_Smash_Damage.rulePack.rulesStrings.11>
  <Maneuver_Smash_Damage.rulePack.rulesStrings.12>damaged_present->clobbering</Maneuver_Smash_Damage.rulePack.rulesStrings.12>
  <Maneuver_Smash_Damage.rulePack.rulesStrings.13>damaged_present(deflected!=True)->bruising</Maneuver_Smash_Damage.rulePack.rulesStrings.13>
  <Maneuver_Smash_Damage.rulePack.rulesStrings.14>damaged_present(deflected!=True)->lacerating</Maneuver_Smash_Damage.rulePack.rulesStrings.14>
  <Maneuver_Smash_Damage.rulePack.rulesStrings.15>destroyed_past->shattered</Maneuver_Smash_Damage.rulePack.rulesStrings.15>
  <Maneuver_Smash_Damage.rulePack.rulesStrings.16>destroyed_past->crushed</Maneuver_Smash_Damage.rulePack.rulesStrings.16>
  <Maneuver_Smash_Damage.rulePack.rulesStrings.17>destroyed_past->obliterated</Maneuver_Smash_Damage.rulePack.rulesStrings.17>
  <Maneuver_Smash_Damage.rulePack.rulesStrings.18>destroyed_past->annihilated</Maneuver_Smash_Damage.rulePack.rulesStrings.18>
  <Maneuver_Smash_Damage.rulePack.rulesStrings.19>destroyed_past->broke</Maneuver_Smash_Damage.rulePack.rulesStrings.19>
  <Maneuver_Smash_Damage.rulePack.rulesStrings.20>destroyed_present->shattering</Maneuver_Smash_Damage.rulePack.rulesStrings.20>
  <Maneuver_Smash_Damage.rulePack.rulesStrings.21>destroyed_present->crushing</Maneuver_Smash_Damage.rulePack.rulesStrings.21>
  <Maneuver_Smash_Damage.rulePack.rulesStrings.22>destroyed_present->obliterating</Maneuver_Smash_Damage.rulePack.rulesStrings.22>
  <Maneuver_Smash_Damage.rulePack.rulesStrings.23>destroyed_present->annihilating</Maneuver_Smash_Damage.rulePack.rulesStrings.23>
  <Maneuver_Smash_Damage.rulePack.rulesStrings.24>destroyed_present->breaking</Maneuver_Smash_Damage.rulePack.rulesStrings.24>

  <Maneuver_Smash.rulePack.rulesStrings.0>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving an enormous bruise</Maneuver_Smash.rulePack.rulesStrings.0>
  <Maneuver_Smash.rulePack.rulesStrings.1>flavortext_consequence->leaving the area visibly deformed</Maneuver_Smash.rulePack.rulesStrings.1>
  <Maneuver_Smash.rulePack.rulesStrings.2>flavortext_consequence->knocking [RECIPIENT_objective] off balance</Maneuver_Smash.rulePack.rulesStrings.2>
  <Maneuver_Smash.rulePack.rulesStrings.3>flavortext_consequence->knocking [RECIPIENT_objective] to the side</Maneuver_Smash.rulePack.rulesStrings.3>
  <Maneuver_Smash.rulePack.rulesStrings.4>destroyed_suffix->[to] pieces</Maneuver_Smash.rulePack.rulesStrings.4>
  <Maneuver_Smash.rulePack.rulesStrings.5>destroyed_suffix->[to] bits</Maneuver_Smash.rulePack.rulesStrings.5>
  <Maneuver_Smash.rulePack.rulesStrings.6>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] a fine mist</Maneuver_Smash.rulePack.rulesStrings.6>
  <Maneuver_Smash.rulePack.rulesStrings.7>destroyed_suffix->[to] fragments</Maneuver_Smash.rulePack.rulesStrings.7>

  <Maneuver_Scratch_Damage.rulePack.rulesStrings.0>damaged_inf(p=4)->scratch</Maneuver_Scratch_Damage.rulePack.rulesStrings.0>
  <Maneuver_Scratch_Damage.rulePack.rulesStrings.1>damaged_inf(deflected!=True)->lacerate</Maneuver_Scratch_Damage.rulePack.rulesStrings.1>
  <Maneuver_Scratch_Damage.rulePack.rulesStrings.2>damaged_inf(deflected!=True)->tear</Maneuver_Scratch_Damage.rulePack.rulesStrings.2>
  <Maneuver_Scratch_Damage.rulePack.rulesStrings.3>damaged_inf->cut</Maneuver_Scratch_Damage.rulePack.rulesStrings.3>
  <Maneuver_Scratch_Damage.rulePack.rulesStrings.4>damaged_past(p=4)->scratched</Maneuver_Scratch_Damage.rulePack.rulesStrings.4>
  <Maneuver_Scratch_Damage.rulePack.rulesStrings.5>damaged_past(deflected!=True)->lacerated</Maneuver_Scratch_Damage.rulePack.rulesStrings.5>
  <Maneuver_Scratch_Damage.rulePack.rulesStrings.6>damaged_past(deflected!=True)->tore</Maneuver_Scratch_Damage.rulePack.rulesStrings.6>
  <Maneuver_Scratch_Damage.rulePack.rulesStrings.7>damaged_past->cut</Maneuver_Scratch_Damage.rulePack.rulesStrings.7>
  <Maneuver_Scratch_Damage.rulePack.rulesStrings.8>damaged_present->scratching</Maneuver_Scratch_Damage.rulePack.rulesStrings.8>
  <Maneuver_Scratch_Damage.rulePack.rulesStrings.9>damaged_present(deflected!=True)->lacerating</Maneuver_Scratch_Damage.rulePack.rulesStrings.9>
  <Maneuver_Scratch_Damage.rulePack.rulesStrings.10>damaged_present(deflected!=True)->tearing</Maneuver_Scratch_Damage.rulePack.rulesStrings.10>
  <Maneuver_Scratch_Damage.rulePack.rulesStrings.11>damaged_present->cutting</Maneuver_Scratch_Damage.rulePack.rulesStrings.11>
  <Maneuver_Scratch_Damage.rulePack.rulesStrings.12>destroyed_past->mauled</Maneuver_Scratch_Damage.rulePack.rulesStrings.12>
  <Maneuver_Scratch_Damage.rulePack.rulesStrings.13>destroyed_past->lacerated</Maneuver_Scratch_Damage.rulePack.rulesStrings.13>
  <Maneuver_Scratch_Damage.rulePack.rulesStrings.14>destroyed_past->tore off</Maneuver_Scratch_Damage.rulePack.rulesStrings.14>
  <Maneuver_Scratch_Damage.rulePack.rulesStrings.15>destroyed_past->shredded</Maneuver_Scratch_Damage.rulePack.rulesStrings.15>
  <Maneuver_Scratch_Damage.rulePack.rulesStrings.16>destroyed_past->ripped</Maneuver_Scratch_Damage.rulePack.rulesStrings.16>
  <Maneuver_Scratch_Damage.rulePack.rulesStrings.17>destroyed_present->mauling</Maneuver_Scratch_Damage.rulePack.rulesStrings.17>
  <Maneuver_Scratch_Damage.rulePack.rulesStrings.18>destroyed_present->lacerating</Maneuver_Scratch_Damage.rulePack.rulesStrings.18>
  <Maneuver_Scratch_Damage.rulePack.rulesStrings.19>destroyed_present->tearing off</Maneuver_Scratch_Damage.rulePack.rulesStrings.19>
  <Maneuver_Scratch_Damage.rulePack.rulesStrings.20>destroyed_present->shredding</Maneuver_Scratch_Damage.rulePack.rulesStrings.20>
  <Maneuver_Scratch_Damage.rulePack.rulesStrings.21>destroyed_present->ripping</Maneuver_Scratch_Damage.rulePack.rulesStrings.21>

  <Maneuver_Scratch.rulePack.rulesStrings.0>woundname->wound</Maneuver_Scratch.rulePack.rulesStrings.0>
  <Maneuver_Scratch.rulePack.rulesStrings.1>woundname(p=0.3)->opening</Maneuver_Scratch.rulePack.rulesStrings.1>
  <Maneuver_Scratch.rulePack.rulesStrings.2>flavortext_situation(recipient_flesh!=Mechanoid)->with blood dripping from the [woundname]</Maneuver_Scratch.rulePack.rulesStrings.2>
  <Maneuver_Scratch.rulePack.rulesStrings.3>flavortext_situation->with fluids dripping from the [woundname]</Maneuver_Scratch.rulePack.rulesStrings.3>
  <Maneuver_Scratch.rulePack.rulesStrings.4>flavortext_consequence(recipient_flesh!=Mechanoid)->and exposing the flesh underneath</Maneuver_Scratch.rulePack.rulesStrings.4>
  <Maneuver_Scratch.rulePack.rulesStrings.5>flavortext_consequence(recipient_flesh==Mechanoid)->and exposing the machinery underneath</Maneuver_Scratch.rulePack.rulesStrings.5>
  <Maneuver_Scratch.rulePack.rulesStrings.6>flavortext_consequence(recipient_flesh!=Mechanoid)->and leaving a gory [woundname]</Maneuver_Scratch.rulePack.rulesStrings.6>
  <Maneuver_Scratch.rulePack.rulesStrings.7>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] messy strips</Maneuver_Scratch.rulePack.rulesStrings.7>
  <Maneuver_Scratch.rulePack.rulesStrings.8>destroyed_suffix->[to] strips</Maneuver_Scratch.rulePack.rulesStrings.8>
  <Maneuver_Scratch.rulePack.rulesStrings.9>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] messy pieces</Maneuver_Scratch.rulePack.rulesStrings.9>
  <Maneuver_Scratch.rulePack.rulesStrings.10>destroyed_suffix->[to] pieces</Maneuver_Scratch.rulePack.rulesStrings.10>
  <Maneuver_Scratch.rulePack.rulesStrings.11>destroyed_suffix->[to] fragments</Maneuver_Scratch.rulePack.rulesStrings.11>
  <Maneuver_Scratch.rulePack.rulesStrings.12>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] a pile of gore</Maneuver_Scratch.rulePack.rulesStrings.12>

  <Maneuver_Poke.rulePack.rulesStrings.0>damaged_inf(p=2)->poke</Maneuver_Poke.rulePack.rulesStrings.0>
  <Maneuver_Poke.rulePack.rulesStrings.1>damaged_inf(p=2)->jab</Maneuver_Poke.rulePack.rulesStrings.1>
  <Maneuver_Poke.rulePack.rulesStrings.2>damaged_inf->prod</Maneuver_Poke.rulePack.rulesStrings.2>
  <Maneuver_Poke.rulePack.rulesStrings.3>damaged_inf->shove</Maneuver_Poke.rulePack.rulesStrings.3>
  <Maneuver_Poke.rulePack.rulesStrings.4>damaged_inf->stab</Maneuver_Poke.rulePack.rulesStrings.4>
  <Maneuver_Poke.rulePack.rulesStrings.5>damaged_past(p=2)->poked</Maneuver_Poke.rulePack.rulesStrings.5>
  <Maneuver_Poke.rulePack.rulesStrings.6>damaged_past(p=2)->jabbed</Maneuver_Poke.rulePack.rulesStrings.6>
  <Maneuver_Poke.rulePack.rulesStrings.7>damaged_past->prodded</Maneuver_Poke.rulePack.rulesStrings.7>
  <Maneuver_Poke.rulePack.rulesStrings.8>damaged_past->shoved</Maneuver_Poke.rulePack.rulesStrings.8>
  <Maneuver_Poke.rulePack.rulesStrings.9>damaged_past->stabbed</Maneuver_Poke.rulePack.rulesStrings.9>
  <Maneuver_Poke.rulePack.rulesStrings.10>damaged_present(p=2)->poking</Maneuver_Poke.rulePack.rulesStrings.10>
  <Maneuver_Poke.rulePack.rulesStrings.11>damaged_present(p=2)->jabbing</Maneuver_Poke.rulePack.rulesStrings.11>
  <Maneuver_Poke.rulePack.rulesStrings.12>damaged_present->prodding</Maneuver_Poke.rulePack.rulesStrings.12>
  <Maneuver_Poke.rulePack.rulesStrings.13>damaged_present->shoving</Maneuver_Poke.rulePack.rulesStrings.13>
  <Maneuver_Poke.rulePack.rulesStrings.14>damaged_present->stabbing</Maneuver_Poke.rulePack.rulesStrings.14>
  <Maneuver_Poke.rulePack.rulesStrings.15>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving an enormous bruise</Maneuver_Poke.rulePack.rulesStrings.15>
  <Maneuver_Poke.rulePack.rulesStrings.16>flavortext_consequence->leaving the area visibly deformed</Maneuver_Poke.rulePack.rulesStrings.16>
  <Maneuver_Poke.rulePack.rulesStrings.17>flavortext_consequence->knocking [RECIPIENT_objective] off balance</Maneuver_Poke.rulePack.rulesStrings.17>
  <Maneuver_Poke.rulePack.rulesStrings.18>flavortext_consequence->knocking [RECIPIENT_objective] to the side</Maneuver_Poke.rulePack.rulesStrings.18>
  <Maneuver_Poke.rulePack.rulesStrings.19>destroyed_past->shattered</Maneuver_Poke.rulePack.rulesStrings.19>
  <Maneuver_Poke.rulePack.rulesStrings.20>destroyed_past->crushed</Maneuver_Poke.rulePack.rulesStrings.20>
  <Maneuver_Poke.rulePack.rulesStrings.21>destroyed_past->obliterated</Maneuver_Poke.rulePack.rulesStrings.21>
  <Maneuver_Poke.rulePack.rulesStrings.22>destroyed_past->annihilated</Maneuver_Poke.rulePack.rulesStrings.22>
  <Maneuver_Poke.rulePack.rulesStrings.23>destroyed_past->broke</Maneuver_Poke.rulePack.rulesStrings.23>
  <Maneuver_Poke.rulePack.rulesStrings.24>destroyed_present->shattering</Maneuver_Poke.rulePack.rulesStrings.24>
  <Maneuver_Poke.rulePack.rulesStrings.25>destroyed_present->crushing</Maneuver_Poke.rulePack.rulesStrings.25>
  <Maneuver_Poke.rulePack.rulesStrings.26>destroyed_present->obliterating</Maneuver_Poke.rulePack.rulesStrings.26>
  <Maneuver_Poke.rulePack.rulesStrings.27>destroyed_present->annihilating</Maneuver_Poke.rulePack.rulesStrings.27>
  <Maneuver_Poke.rulePack.rulesStrings.28>destroyed_present->breaking</Maneuver_Poke.rulePack.rulesStrings.28>
  <Maneuver_Poke.rulePack.rulesStrings.29>destroyed_suffix->[to] pieces</Maneuver_Poke.rulePack.rulesStrings.29>
  <Maneuver_Poke.rulePack.rulesStrings.30>destroyed_suffix->[to] bits</Maneuver_Poke.rulePack.rulesStrings.30>
  <Maneuver_Poke.rulePack.rulesStrings.31>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] a fine mist</Maneuver_Poke.rulePack.rulesStrings.31>
  <Maneuver_Poke.rulePack.rulesStrings.32>destroyed_suffix->[to] fragments</Maneuver_Poke.rulePack.rulesStrings.32>

  <Maneuver_Bite.rulePack.rulesStrings.0>damaged_inf->bite</Maneuver_Bite.rulePack.rulesStrings.0>
  <Maneuver_Bite.rulePack.rulesStrings.1>damaged_inf->chomp</Maneuver_Bite.rulePack.rulesStrings.1>
  <Maneuver_Bite.rulePack.rulesStrings.2>damaged_inf(p=0.5)->nip</Maneuver_Bite.rulePack.rulesStrings.2>
  <Maneuver_Bite.rulePack.rulesStrings.3>damaged_past->bit</Maneuver_Bite.rulePack.rulesStrings.3>
  <Maneuver_Bite.rulePack.rulesStrings.4>damaged_past->chomped</Maneuver_Bite.rulePack.rulesStrings.4>
  <Maneuver_Bite.rulePack.rulesStrings.5>damaged_past->nipped</Maneuver_Bite.rulePack.rulesStrings.5>
  <Maneuver_Bite.rulePack.rulesStrings.6>damaged_past->gnawed</Maneuver_Bite.rulePack.rulesStrings.6>
  <Maneuver_Bite.rulePack.rulesStrings.7>damaged_past(deflected!=True)->tore</Maneuver_Bite.rulePack.rulesStrings.7>
  <Maneuver_Bite.rulePack.rulesStrings.8>damaged_present->biting</Maneuver_Bite.rulePack.rulesStrings.8>
  <Maneuver_Bite.rulePack.rulesStrings.9>damaged_present->chomping</Maneuver_Bite.rulePack.rulesStrings.9>
  <Maneuver_Bite.rulePack.rulesStrings.10>damaged_present->nipped</Maneuver_Bite.rulePack.rulesStrings.10>
  <Maneuver_Bite.rulePack.rulesStrings.11>damaged_present->gnawing</Maneuver_Bite.rulePack.rulesStrings.11>
  <Maneuver_Bite.rulePack.rulesStrings.12>damaged_present(deflected!=True)->tearing</Maneuver_Bite.rulePack.rulesStrings.12>
  <Maneuver_Bite.rulePack.rulesStrings.13>flavortext_consequence(recipient_flesh!=Mechanoid)->exposing the flesh underneath</Maneuver_Bite.rulePack.rulesStrings.13>
  <Maneuver_Bite.rulePack.rulesStrings.14>flavortext_consequence(recipient_flesh==Mechanoid)->exposing the machinery underneath</Maneuver_Bite.rulePack.rulesStrings.14>
  <Maneuver_Bite.rulePack.rulesStrings.15>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving grisly tears in the skin</Maneuver_Bite.rulePack.rulesStrings.15>
  <Maneuver_Bite.rulePack.rulesStrings.16>flavortext_consequence(recipient_flesh==Mechanoid)->leaving grisly tears in the metal</Maneuver_Bite.rulePack.rulesStrings.16>
  <Maneuver_Bite.rulePack.rulesStrings.17>destroyed_past->devoured</Maneuver_Bite.rulePack.rulesStrings.17>
  <Maneuver_Bite.rulePack.rulesStrings.18>destroyed_past->separated</Maneuver_Bite.rulePack.rulesStrings.18>
  <Maneuver_Bite.rulePack.rulesStrings.19>destroyed_past->ripped</Maneuver_Bite.rulePack.rulesStrings.19>
  <Maneuver_Bite.rulePack.rulesStrings.20>destroyed_past->ravaged</Maneuver_Bite.rulePack.rulesStrings.20>
  <Maneuver_Bite.rulePack.rulesStrings.21>destroyed_present->devouring</Maneuver_Bite.rulePack.rulesStrings.21>
  <Maneuver_Bite.rulePack.rulesStrings.22>destroyed_present->separating</Maneuver_Bite.rulePack.rulesStrings.22>
  <Maneuver_Bite.rulePack.rulesStrings.23>destroyed_present->ripping</Maneuver_Bite.rulePack.rulesStrings.23>
  <Maneuver_Bite.rulePack.rulesStrings.24>destroyed_present->ravaging</Maneuver_Bite.rulePack.rulesStrings.24>
  <Maneuver_Bite.rulePack.rulesStrings.25>destroyed_suffix->[to] shreds</Maneuver_Bite.rulePack.rulesStrings.25>
  <Maneuver_Bite.rulePack.rulesStrings.26>destroyed_suffix->[to] pieces</Maneuver_Bite.rulePack.rulesStrings.26>
  <Maneuver_Bite.rulePack.rulesStrings.27>destroyed_suffix->[to] strips</Maneuver_Bite.rulePack.rulesStrings.27>
  <Maneuver_Bite.rulePack.rulesStrings.28>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] messy strips</Maneuver_Bite.rulePack.rulesStrings.28>
  <Maneuver_Bite.rulePack.rulesStrings.29>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] an unrecognizable mess</Maneuver_Bite.rulePack.rulesStrings.29>

  <Maneuver_KickMaterialInEyes_MeleeHit.rulePack.rulesStrings.0>r_logentry->[INITIATOR_definite] kicked [TOOL_label] in [RECIPIENT_definite]'s eyes.</Maneuver_KickMaterialInEyes_MeleeHit.rulePack.rulesStrings.0>
  <Maneuver_KickMaterialInEyes_MeleeHit.rulePack.rulesStrings.1>r_logentry(p=0.2)->[INITIATOR_definite] kicked a spray of [TOOL_label] in [RECIPIENT_definite]'s eyes.</Maneuver_KickMaterialInEyes_MeleeHit.rulePack.rulesStrings.1>

  <Maneuver_KickMaterialInEyes_MeleeMiss.rulePack.rulesStrings.0>r_logentry->[INITIATOR_definite] tried to kick [TOOL_label] in [RECIPIENT_definite]'s eyes, but missed.</Maneuver_KickMaterialInEyes_MeleeMiss.rulePack.rulesStrings.0>

  <Maneuver_KickMaterialInEyes_MeleeDodge.rulePack.rulesStrings.0>r_logentry->[INITIATOR_definite] tried to kick [TOOL_label] in [RECIPIENT_definite]'s eyes, but [RECIPIENT_definite] dodged out of the way.</Maneuver_KickMaterialInEyes_MeleeDodge.rulePack.rulesStrings.0>
  <Maneuver_KickMaterialInEyes_MeleeDodge.rulePack.rulesStrings.1>r_logentry->[INITIATOR_definite] tried to kick [TOOL_label] in [RECIPIENT_definite]'s eyes, but [RECIPIENT_definite] blocked it.</Maneuver_KickMaterialInEyes_MeleeDodge.rulePack.rulesStrings.1>


</LanguageData>
