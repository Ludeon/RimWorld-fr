<?xml version="1.0" encoding="utf-8"?>
<LanguageData>

  <Combat_MeleeIncludes.rulePack.rulesStrings.0>r_logentry->[action], [result].</Combat_MeleeIncludes.rulePack.rulesStrings.0>
  <Combat_MeleeIncludes.rulePack.rulesStrings.1>r_logentry(p=0.2)->[action].</Combat_MeleeIncludes.rulePack.rulesStrings.1>
  <Combat_MeleeIncludes.rulePack.rulesStrings.2>implement(IMPLEMENTOWNER_type==weapon,p=2)->[INITIATOR_possessive] [WEAPON_label]'s [TOOL_label]</Combat_MeleeIncludes.rulePack.rulesStrings.2>
  <Combat_MeleeIncludes.rulePack.rulesStrings.3>implement(IMPLEMENTOWNER_type==weapon,p=1)->[INITIATOR_possessive] [WEAPON_label]</Combat_MeleeIncludes.rulePack.rulesStrings.3>
  <Combat_MeleeIncludes.rulePack.rulesStrings.4>implement(IMPLEMENTOWNER_type==weapon,p=1)->a [WEAPON_label]'s [TOOL_label]</Combat_MeleeIncludes.rulePack.rulesStrings.4>
  <Combat_MeleeIncludes.rulePack.rulesStrings.5>implement(IMPLEMENTOWNER_type==weapon,p=0.5)->a [WEAPON_label]</Combat_MeleeIncludes.rulePack.rulesStrings.5>
  <Combat_MeleeIncludes.rulePack.rulesStrings.6>implement(IMPLEMENTOWNER_type==bodypart,p=2)->[INITIATOR_possessive] [TOOL_label]</Combat_MeleeIncludes.rulePack.rulesStrings.6>
  <Combat_MeleeIncludes.rulePack.rulesStrings.7>implement(IMPLEMENTOWNER_type==bodypart,p=1)->[INITIATOR_possessive] [adjective_bodypart] [TOOL_label]</Combat_MeleeIncludes.rulePack.rulesStrings.7>
  <Combat_MeleeIncludes.rulePack.rulesStrings.8>implement(IMPLEMENTOWNER_type==hediff,p=2)->[INITIATOR_possessive] [WEAPON_label]'s [TOOL_label]</Combat_MeleeIncludes.rulePack.rulesStrings.8>
  <Combat_MeleeIncludes.rulePack.rulesStrings.9>implement(IMPLEMENTOWNER_type==hediff,p=1)->[INITIATOR_possessive] [WEAPON_label]</Combat_MeleeIncludes.rulePack.rulesStrings.9>
  <Combat_MeleeIncludes.rulePack.rulesStrings.10>implement(IMPLEMENTOWNER_type==hediff,p=1)->[INITIATOR_possessive] [TOOL_label]</Combat_MeleeIncludes.rulePack.rulesStrings.10>
  <Combat_MeleeIncludes.rulePack.rulesStrings.11>adjective_bodypart->hard</Combat_MeleeIncludes.rulePack.rulesStrings.11>
  <Combat_MeleeIncludes.rulePack.rulesStrings.12>adjective_bodypart->strong</Combat_MeleeIncludes.rulePack.rulesStrings.12>
  <Combat_MeleeIncludes.rulePack.rulesStrings.13>adjective_bodypart->powerful</Combat_MeleeIncludes.rulePack.rulesStrings.13>
  <Combat_MeleeIncludes.rulePack.rulesStrings.14>adjective_bodypart->forceful</Combat_MeleeIncludes.rulePack.rulesStrings.14>
  <Combat_MeleeIncludes.rulePack.rulesStrings.15>adjective_bodypart->mighty</Combat_MeleeIncludes.rulePack.rulesStrings.15>
  <Combat_MeleeIncludes.rulePack.rulesStrings.16>adjective_bodypart->rugged</Combat_MeleeIncludes.rulePack.rulesStrings.16>
  <Combat_MeleeIncludes.rulePack.rulesStrings.17>adjective_bodypart->stout</Combat_MeleeIncludes.rulePack.rulesStrings.17>
  <Combat_MeleeIncludes.rulePack.rulesStrings.18>adjective_bodypart->sturdy</Combat_MeleeIncludes.rulePack.rulesStrings.18>
  <Combat_MeleeIncludes.rulePack.rulesStrings.19>adjective_bodypart->solid</Combat_MeleeIncludes.rulePack.rulesStrings.19>
  <Combat_MeleeIncludes.rulePack.rulesStrings.20>adjective_bodypart->tough</Combat_MeleeIncludes.rulePack.rulesStrings.20>
  <Combat_MeleeIncludes.rulePack.rulesStrings.21>adjective_bodypart(initiator_flesh==True)->calloused</Combat_MeleeIncludes.rulePack.rulesStrings.21>
  <Combat_MeleeIncludes.rulePack.rulesStrings.22>adjective_bodypart->firm</Combat_MeleeIncludes.rulePack.rulesStrings.22>
  <Combat_MeleeIncludes.rulePack.rulesStrings.23>targetlist(recipient_part_count==1)->[RECIPIENT_part0_label]</Combat_MeleeIncludes.rulePack.rulesStrings.23>
  <Combat_MeleeIncludes.rulePack.rulesStrings.24>targetlist(recipient_part_count==2)->[RECIPIENT_part0_label] and [RECIPIENT_part1_label]</Combat_MeleeIncludes.rulePack.rulesStrings.24>
  <Combat_MeleeIncludes.rulePack.rulesStrings.25>targetlist(recipient_part_count==3)->[RECIPIENT_part0_label], [RECIPIENT_part1_label], and [RECIPIENT_part2_label]</Combat_MeleeIncludes.rulePack.rulesStrings.25>
  <Combat_MeleeIncludes.rulePack.rulesStrings.26>targetlist->[RECIPIENT_part0_label], [RECIPIENT_part1_label], [RECIPIENT_part2_label], and [RECIPIENT_part3_label]</Combat_MeleeIncludes.rulePack.rulesStrings.26>
  <Combat_MeleeIncludes.rulePack.rulesStrings.27>damaged_present(deflected!=True)->wounding</Combat_MeleeIncludes.rulePack.rulesStrings.27>
  <Combat_MeleeIncludes.rulePack.rulesStrings.28>damaged_present(deflected!=True)->injuring</Combat_MeleeIncludes.rulePack.rulesStrings.28>
  <Combat_MeleeIncludes.rulePack.rulesStrings.29>destroyed(p=0.5)->destroyed</Combat_MeleeIncludes.rulePack.rulesStrings.29>
  <Combat_MeleeIncludes.rulePack.rulesStrings.30>destroyed(p=0.5)->demolished</Combat_MeleeIncludes.rulePack.rulesStrings.30>
  <Combat_MeleeIncludes.rulePack.rulesStrings.31>destroyed(p=0.5)->ruined</Combat_MeleeIncludes.rulePack.rulesStrings.31>
  <Combat_MeleeIncludes.rulePack.rulesStrings.32>destroyed(p=0.5)->wrecked</Combat_MeleeIncludes.rulePack.rulesStrings.32>
  <Combat_MeleeIncludes.rulePack.rulesStrings.33>wince(recipient_flesh==Normal)->wince</Combat_MeleeIncludes.rulePack.rulesStrings.33>
  <Combat_MeleeIncludes.rulePack.rulesStrings.34>wince(recipient_flesh==Normal)->grimace</Combat_MeleeIncludes.rulePack.rulesStrings.34>
  <Combat_MeleeIncludes.rulePack.rulesStrings.35>wince(recipient_flesh==Normal)->cringe</Combat_MeleeIncludes.rulePack.rulesStrings.35>
  <Combat_MeleeIncludes.rulePack.rulesStrings.36>wince(recipient_flesh==Normal)->groan</Combat_MeleeIncludes.rulePack.rulesStrings.36>
  <Combat_MeleeIncludes.rulePack.rulesStrings.37>wince(recipient_flesh!=Mechanoid)->scream</Combat_MeleeIncludes.rulePack.rulesStrings.37>
  <Combat_MeleeIncludes.rulePack.rulesStrings.38>wince(recipient_flesh!=Mechanoid)->shout</Combat_MeleeIncludes.rulePack.rulesStrings.38>
  <Combat_MeleeIncludes.rulePack.rulesStrings.39>wince->recoil</Combat_MeleeIncludes.rulePack.rulesStrings.39>
  <Combat_MeleeIncludes.rulePack.rulesStrings.40>wince->stumble</Combat_MeleeIncludes.rulePack.rulesStrings.40>
  <Combat_MeleeIncludes.rulePack.rulesStrings.41>painstate->in</Combat_MeleeIncludes.rulePack.rulesStrings.41>
  <Combat_MeleeIncludes.rulePack.rulesStrings.42>painstate->with</Combat_MeleeIncludes.rulePack.rulesStrings.42>
  <Combat_MeleeIncludes.rulePack.rulesStrings.43>painstate->from the</Combat_MeleeIncludes.rulePack.rulesStrings.43>
  <Combat_MeleeIncludes.rulePack.rulesStrings.44>painevent(recipient_flesh!=Mechanoid)->[painstate] pain</Combat_MeleeIncludes.rulePack.rulesStrings.44>
  <Combat_MeleeIncludes.rulePack.rulesStrings.45>painevent(recipient_flesh!=Mechanoid)->[painstate] agony</Combat_MeleeIncludes.rulePack.rulesStrings.45>
  <Combat_MeleeIncludes.rulePack.rulesStrings.46>painevent(recipient_flesh==Normal)->with misery</Combat_MeleeIncludes.rulePack.rulesStrings.46>
  <Combat_MeleeIncludes.rulePack.rulesStrings.47>painevent->from the injury</Combat_MeleeIncludes.rulePack.rulesStrings.47>
  <Combat_MeleeIncludes.rulePack.rulesStrings.48>painevent->from the wound</Combat_MeleeIncludes.rulePack.rulesStrings.48>
  <Combat_MeleeIncludes.rulePack.rulesStrings.49>to->to</Combat_MeleeIncludes.rulePack.rulesStrings.49>
  <Combat_MeleeIncludes.rulePack.rulesStrings.50>to->into</Combat_MeleeIncludes.rulePack.rulesStrings.50>

  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.0>result(p=0.5)->[damaged_present] [RECIPIENT_possessive] [targetlist]</Combat_MeleeDamageIncludes.rulePack.rulesStrings.0>
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.1>result(p=0.1)->[damaged_present] [RECIPIENT_possessive] [targetlist] [adverb_flavortext]</Combat_MeleeDamageIncludes.rulePack.rulesStrings.1>
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.2>result(p=0.1)->[damaged_present] [RECIPIENT_possessive] [targetlist] [flavortext_situation]</Combat_MeleeDamageIncludes.rulePack.rulesStrings.2>
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.3>result(p=0.1)->[damaged_present] [RECIPIENT_possessive] [targetlist] and [flavortext_consequence]</Combat_MeleeDamageIncludes.rulePack.rulesStrings.3>
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.4>adverb_flavortext->painfully</Combat_MeleeDamageIncludes.rulePack.rulesStrings.4>
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.5>adverb_flavortext->brutally</Combat_MeleeDamageIncludes.rulePack.rulesStrings.5>
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.6>adverb_flavortext->horribly</Combat_MeleeDamageIncludes.rulePack.rulesStrings.6>
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.7>adverb_flavortext->agonizingly</Combat_MeleeDamageIncludes.rulePack.rulesStrings.7>
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.8>adverb_flavortext->fiercely</Combat_MeleeDamageIncludes.rulePack.rulesStrings.8>
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.9>adverb_flavortext->ruthlessly</Combat_MeleeDamageIncludes.rulePack.rulesStrings.9>
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.10>adverb_flavortext->savagely</Combat_MeleeDamageIncludes.rulePack.rulesStrings.10>
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.11>adverb_flavortext->viciously</Combat_MeleeDamageIncludes.rulePack.rulesStrings.11>
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.12>adverb_flavortext->mercilessly</Combat_MeleeDamageIncludes.rulePack.rulesStrings.12>
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.13>adverb_flavortext->heartlessly</Combat_MeleeDamageIncludes.rulePack.rulesStrings.13>
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.14>flavortext_situation(recipient_flesh!=Mechanoid)->in an explosion of gore</Combat_MeleeDamageIncludes.rulePack.rulesStrings.14>
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.15>flavortext_situation(recipient_flesh==Mechanoid)->in an explosion of scrap</Combat_MeleeDamageIncludes.rulePack.rulesStrings.15>
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.16>flavortext_situation->without emotion</Combat_MeleeDamageIncludes.rulePack.rulesStrings.16>
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.17>flavortext_situation(p=0.4)->while wearing a blank look</Combat_MeleeDamageIncludes.rulePack.rulesStrings.17>
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.18>flavortext_situation(p=0.2,initiator_flesh==Normal)->while wearing a savage look</Combat_MeleeDamageIncludes.rulePack.rulesStrings.18>
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.19>flavortext_situation(p=0.2,initiator_flesh==Normal)->while wearing a [AdjectiveBadass] look</Combat_MeleeDamageIncludes.rulePack.rulesStrings.19>
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.20>flavortext_situation(p=0.2,initiator_flesh==Normal)->while grimacing</Combat_MeleeDamageIncludes.rulePack.rulesStrings.20>
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.21>flavortext_situation(p=0.2,initiator_flesh==Normal)->while laughing</Combat_MeleeDamageIncludes.rulePack.rulesStrings.21>
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.22>flavortext_situation(p=0.2,initiator_flesh==Normal)->while smirking</Combat_MeleeDamageIncludes.rulePack.rulesStrings.22>
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.23>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a disgusting wound</Combat_MeleeDamageIncludes.rulePack.rulesStrings.23>
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.24>flavortext_consequence->leaving a horrific wound</Combat_MeleeDamageIncludes.rulePack.rulesStrings.24>
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.25>flavortext_consequence(recipient_flesh!=Mechanoid)->making [RECIPIENT_objective] [wince] [painevent]</Combat_MeleeDamageIncludes.rulePack.rulesStrings.25>
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.26>flavortext_consequence(p=0.2)->throwing [RECIPIENT_objective] off balance</Combat_MeleeDamageIncludes.rulePack.rulesStrings.26>

  <Combat_WoundIncludes.rulePack.rulesStrings.0>destroyed_targets(recipient_part_destroyed_count==1)->[RECIPIENT_part_destroyed0_label]</Combat_WoundIncludes.rulePack.rulesStrings.0>
  <Combat_WoundIncludes.rulePack.rulesStrings.1>destroyed_targets(recipient_part_destroyed_count==2)->[RECIPIENT_part_destroyed0_label] and [RECIPIENT_part_destroyed1_label]</Combat_WoundIncludes.rulePack.rulesStrings.1>
  <Combat_WoundIncludes.rulePack.rulesStrings.2>destroyed_targets(recipient_part_destroyed_count==3)->[RECIPIENT_part_destroyed0_label], [RECIPIENT_part_destroyed1_label], and [RECIPIENT_part_destroyed2_label]</Combat_WoundIncludes.rulePack.rulesStrings.2>
  <Combat_WoundIncludes.rulePack.rulesStrings.3>destroyed_targets->[RECIPIENT_part_destroyed0_label], [RECIPIENT_part_destroyed1_label], [RECIPIENT_part_destroyed2_label], and [RECIPIENT_part_destroyed3_label]</Combat_WoundIncludes.rulePack.rulesStrings.3>
  <Combat_WoundIncludes.rulePack.rulesStrings.4>damaged_targets(recipient_part_damaged_count==1)->[RECIPIENT_part_damaged0_label]</Combat_WoundIncludes.rulePack.rulesStrings.4>
  <Combat_WoundIncludes.rulePack.rulesStrings.5>damaged_targets(recipient_part_damaged_count==2)->[RECIPIENT_part_damaged0_label] and [RECIPIENT_part_damaged1_label]</Combat_WoundIncludes.rulePack.rulesStrings.5>
  <Combat_WoundIncludes.rulePack.rulesStrings.6>damaged_targets(recipient_part_damaged_count==3)->[RECIPIENT_part_damaged0_label], [RECIPIENT_part_damaged1_label], and [RECIPIENT_part_damaged2_label]</Combat_WoundIncludes.rulePack.rulesStrings.6>
  <Combat_WoundIncludes.rulePack.rulesStrings.7>damaged_targets->[RECIPIENT_part_damaged0_label], [RECIPIENT_part_damaged1_label], [RECIPIENT_part_damaged2_label], and [RECIPIENT_part_damaged3_label]</Combat_WoundIncludes.rulePack.rulesStrings.7>
  <Combat_WoundIncludes.rulePack.rulesStrings.8>expertly->expertly</Combat_WoundIncludes.rulePack.rulesStrings.8>
  <Combat_WoundIncludes.rulePack.rulesStrings.9>expertly->adeptly</Combat_WoundIncludes.rulePack.rulesStrings.9>
  <Combat_WoundIncludes.rulePack.rulesStrings.10>expertly->adroitly</Combat_WoundIncludes.rulePack.rulesStrings.10>
  <Combat_WoundIncludes.rulePack.rulesStrings.11>expertly->deftly</Combat_WoundIncludes.rulePack.rulesStrings.11>
  <Combat_WoundIncludes.rulePack.rulesStrings.12>expertly->skillfully</Combat_WoundIncludes.rulePack.rulesStrings.12>
  <Combat_WoundIncludes.rulePack.rulesStrings.13>expertly->slickly</Combat_WoundIncludes.rulePack.rulesStrings.13>
  <Combat_WoundIncludes.rulePack.rulesStrings.14>expertly->professionally</Combat_WoundIncludes.rulePack.rulesStrings.14>
  <Combat_WoundIncludes.rulePack.rulesStrings.15>expertly->aptly</Combat_WoundIncludes.rulePack.rulesStrings.15>
  <Combat_WoundIncludes.rulePack.rulesStrings.16>expertly->dexterously</Combat_WoundIncludes.rulePack.rulesStrings.16>
  <Combat_WoundIncludes.rulePack.rulesStrings.17>expertly->cleverly</Combat_WoundIncludes.rulePack.rulesStrings.17>
  <Combat_WoundIncludes.rulePack.rulesStrings.18>expertly->masterfully</Combat_WoundIncludes.rulePack.rulesStrings.18>
  <Combat_WoundIncludes.rulePack.rulesStrings.19>expertly->artistically</Combat_WoundIncludes.rulePack.rulesStrings.19>
  <Combat_WoundIncludes.rulePack.rulesStrings.20>expertly->with skill</Combat_WoundIncludes.rulePack.rulesStrings.20>
  <Combat_WoundIncludes.rulePack.rulesStrings.21>expertly->with impressive experience</Combat_WoundIncludes.rulePack.rulesStrings.21>
  <Combat_WoundIncludes.rulePack.rulesStrings.22>expertly->with flair</Combat_WoundIncludes.rulePack.rulesStrings.22>
  <Combat_WoundIncludes.rulePack.rulesStrings.23>expertly->with care</Combat_WoundIncludes.rulePack.rulesStrings.23>
  <Combat_WoundIncludes.rulePack.rulesStrings.24>expertly->with precision</Combat_WoundIncludes.rulePack.rulesStrings.24>
  <Combat_WoundIncludes.rulePack.rulesStrings.25>expertly->with proficiency</Combat_WoundIncludes.rulePack.rulesStrings.25>
  <Combat_WoundIncludes.rulePack.rulesStrings.26>expertly->with strength</Combat_WoundIncludes.rulePack.rulesStrings.26>
  <Combat_WoundIncludes.rulePack.rulesStrings.27>expertly->with dexterity</Combat_WoundIncludes.rulePack.rulesStrings.27>
  <Combat_WoundIncludes.rulePack.rulesStrings.28>expertly->with mastery</Combat_WoundIncludes.rulePack.rulesStrings.28>
  <Combat_WoundIncludes.rulePack.rulesStrings.29>expertly->with artistry</Combat_WoundIncludes.rulePack.rulesStrings.29>
  <Combat_WoundIncludes.rulePack.rulesStrings.30>expertly->with professionalism</Combat_WoundIncludes.rulePack.rulesStrings.30>
  <Combat_WoundIncludes.rulePack.rulesStrings.31>expertly->like a virtuoso</Combat_WoundIncludes.rulePack.rulesStrings.31>
  <Combat_WoundIncludes.rulePack.rulesStrings.32>expertly->like an expert</Combat_WoundIncludes.rulePack.rulesStrings.32>
  <Combat_WoundIncludes.rulePack.rulesStrings.33>expertly->like a master</Combat_WoundIncludes.rulePack.rulesStrings.33>
  <Combat_WoundIncludes.rulePack.rulesStrings.34>expertly->like an artist</Combat_WoundIncludes.rulePack.rulesStrings.34>
  <Combat_WoundIncludes.rulePack.rulesStrings.35>expertly->like a pro</Combat_WoundIncludes.rulePack.rulesStrings.35>
  <Combat_WoundIncludes.rulePack.rulesStrings.36>expert->expert</Combat_WoundIncludes.rulePack.rulesStrings.36>
  <Combat_WoundIncludes.rulePack.rulesStrings.37>expert->adept</Combat_WoundIncludes.rulePack.rulesStrings.37>
  <Combat_WoundIncludes.rulePack.rulesStrings.38>expert->adroit</Combat_WoundIncludes.rulePack.rulesStrings.38>
  <Combat_WoundIncludes.rulePack.rulesStrings.39>expert->deft</Combat_WoundIncludes.rulePack.rulesStrings.39>
  <Combat_WoundIncludes.rulePack.rulesStrings.40>expert->skillful</Combat_WoundIncludes.rulePack.rulesStrings.40>
  <Combat_WoundIncludes.rulePack.rulesStrings.41>expert->slick</Combat_WoundIncludes.rulePack.rulesStrings.41>
  <Combat_WoundIncludes.rulePack.rulesStrings.42>expert->professional</Combat_WoundIncludes.rulePack.rulesStrings.42>
  <Combat_WoundIncludes.rulePack.rulesStrings.43>expert->apt</Combat_WoundIncludes.rulePack.rulesStrings.43>
  <Combat_WoundIncludes.rulePack.rulesStrings.44>expert->dexterous</Combat_WoundIncludes.rulePack.rulesStrings.44>
  <Combat_WoundIncludes.rulePack.rulesStrings.45>expert->clever</Combat_WoundIncludes.rulePack.rulesStrings.45>
  <Combat_WoundIncludes.rulePack.rulesStrings.46>expert->masterful</Combat_WoundIncludes.rulePack.rulesStrings.46>
  <Combat_WoundIncludes.rulePack.rulesStrings.47>expert->artistic</Combat_WoundIncludes.rulePack.rulesStrings.47>

  <Combat_DeflectIncludes.rulePack.rulesStrings.0>scraped_present->glancing</Combat_DeflectIncludes.rulePack.rulesStrings.0>
  <Combat_DeflectIncludes.rulePack.rulesStrings.1>scraped_present->bouncing</Combat_DeflectIncludes.rulePack.rulesStrings.1>
  <Combat_DeflectIncludes.rulePack.rulesStrings.2>scraped_present->grazing</Combat_DeflectIncludes.rulePack.rulesStrings.2>
  <Combat_DeflectIncludes.rulePack.rulesStrings.3>scraped_present->caroming</Combat_DeflectIncludes.rulePack.rulesStrings.3>
  <Combat_DeflectIncludes.rulePack.rulesStrings.4>scraped_present->skipping</Combat_DeflectIncludes.rulePack.rulesStrings.4>
  <Combat_DeflectIncludes.rulePack.rulesStrings.5>scraped_present->skating</Combat_DeflectIncludes.rulePack.rulesStrings.5>
  <Combat_DeflectIncludes.rulePack.rulesStrings.6>scraped_past->glanced</Combat_DeflectIncludes.rulePack.rulesStrings.6>
  <Combat_DeflectIncludes.rulePack.rulesStrings.7>scraped_past->bounced</Combat_DeflectIncludes.rulePack.rulesStrings.7>
  <Combat_DeflectIncludes.rulePack.rulesStrings.8>scraped_past->grazed</Combat_DeflectIncludes.rulePack.rulesStrings.8>
  <Combat_DeflectIncludes.rulePack.rulesStrings.9>scraped_past->caromed</Combat_DeflectIncludes.rulePack.rulesStrings.9>
  <Combat_DeflectIncludes.rulePack.rulesStrings.10>scraped_past->skipped</Combat_DeflectIncludes.rulePack.rulesStrings.10>
  <Combat_DeflectIncludes.rulePack.rulesStrings.11>scraped_past->skated</Combat_DeflectIncludes.rulePack.rulesStrings.11>

  <Combat_Hit.rulePack.rulesStrings.0>r_logentry(p=0.3)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] in the [RECIPIENT_part0_label].</Combat_Hit.rulePack.rulesStrings.0>
  <Combat_Hit.rulePack.rulesStrings.1>r_logentry(p=0.1)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] in the [RECIPIENT_part0_label] [adverb_flavortext].</Combat_Hit.rulePack.rulesStrings.1>
  <Combat_Hit.rulePack.rulesStrings.2>r_logentry(p=0.1)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] in the [RECIPIENT_part0_label] [flavortext_situation].</Combat_Hit.rulePack.rulesStrings.2>
  <Combat_Hit.rulePack.rulesStrings.3>r_logentry(p=0.1)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] in the [RECIPIENT_part0_label], [flavortext_consequence].</Combat_Hit.rulePack.rulesStrings.3>
  <Combat_Hit.rulePack.rulesStrings.4>r_logentry(p=0.07)->[INITIATOR_definite], wielding [INITIATOR_possessive] [WEAPON_label] [expertly], [damaged_past] [RECIPIENT_definite] in the [RECIPIENT_part0_label].</Combat_Hit.rulePack.rulesStrings.4>
  <Combat_Hit.rulePack.rulesStrings.5>r_logentry(p=0.03)->[INITIATOR_definite], wielding [INITIATOR_possessive] [WEAPON_label] [expertly], [adverb_flavortext] [damaged_past] [RECIPIENT_definite] in the [RECIPIENT_part0_label].</Combat_Hit.rulePack.rulesStrings.5>
  <Combat_Hit.rulePack.rulesStrings.6>r_logentry(p=0.3)->[INITIATOR_definite] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets].</Combat_Hit.rulePack.rulesStrings.6>
  <Combat_Hit.rulePack.rulesStrings.7>r_logentry(p=0.3)->[INITIATOR_definite] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets] [destroyed_suffix].</Combat_Hit.rulePack.rulesStrings.7>
  <Combat_Hit.rulePack.rulesStrings.8>r_logentry(p=0.3)->[INITIATOR_definite] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets] [expertly].</Combat_Hit.rulePack.rulesStrings.8>
  <Combat_Hit.rulePack.rulesStrings.9>r_logentry(p=0.3)->[INITIATOR_definite] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets] with [implement].</Combat_Hit.rulePack.rulesStrings.9>
  <Combat_Hit.rulePack.rulesStrings.10>result(p=1,recipient_part_damaged_count==0)->[destroyed_present] [RECIPIENT_possessive] [destroyed_targets]</Combat_Hit.rulePack.rulesStrings.10>
  <Combat_Hit.rulePack.rulesStrings.11>result(p=1,recipient_part_destroyed_count==0)->[damaged_present] [RECIPIENT_possessive] [damaged_targets]</Combat_Hit.rulePack.rulesStrings.11>
  <Combat_Hit.rulePack.rulesStrings.12>result(p=1)->[destroyed_present] [RECIPIENT_possessive] [destroyed_targets] and [damaged_present] [RECIPIENT_possessive] [damaged_targets]</Combat_Hit.rulePack.rulesStrings.12>
  <Combat_Hit.rulePack.rulesStrings.13>action(p=0.3)->[INITIATOR_definite] hit [RECIPIENT_definite] with a [damaged_inf] from [implement]</Combat_Hit.rulePack.rulesStrings.13>
  <Combat_Hit.rulePack.rulesStrings.14>action(p=0.3)->[INITIATOR_definite] used [implement] to [damaged_inf] [RECIPIENT_definite]</Combat_Hit.rulePack.rulesStrings.14>
  <Combat_Hit.rulePack.rulesStrings.15>action->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] with [implement]</Combat_Hit.rulePack.rulesStrings.15>
  <Combat_Hit.rulePack.rulesStrings.16>action(p=0.6)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite]</Combat_Hit.rulePack.rulesStrings.16>

  <Combat_Deflect.rulePack.rulesStrings.0>r_logentry(p=1)->[INITIATOR_definite] [damaged_past] [at] [RECIPIENT_definite] in the [RECIPIENT_part0_label] [deflected_result].</Combat_Deflect.rulePack.rulesStrings.0>
  <Combat_Deflect.rulePack.rulesStrings.1>r_logentry(p=0.3)->[INITIATOR_definite], wielding [INITIATOR_possessive] [WEAPON_label] [expertly], [damaged_past] [RECIPIENT_definite] in the [RECIPIENT_part0_label] [deflected_result].</Combat_Deflect.rulePack.rulesStrings.1>
  <Combat_Deflect.rulePack.rulesStrings.2>r_logentry(p=0.3)->[INITIATOR_definite] hit [RECIPIENT_definite] with a [damaged_inf] from [implement] [deflected_result].</Combat_Deflect.rulePack.rulesStrings.2>
  <Combat_Deflect.rulePack.rulesStrings.3>r_logentry(p=0.3)->[INITIATOR_definite] used [implement] to [damaged_inf] [RECIPIENT_definite] [deflected_result].</Combat_Deflect.rulePack.rulesStrings.3>
  <Combat_Deflect.rulePack.rulesStrings.4>r_logentry(p=0.6)->[INITIATOR_definite] [damaged_past] [at] [RECIPIENT_definite] with [implement] [deflected_result].</Combat_Deflect.rulePack.rulesStrings.4>
  <Combat_Deflect.rulePack.rulesStrings.5>r_logentry(p=0.6)->[INITIATOR_definite] [damaged_past] [at] [RECIPIENT_definite] [deflected_result].</Combat_Deflect.rulePack.rulesStrings.5>
  <Combat_Deflect.rulePack.rulesStrings.6>at-></Combat_Deflect.rulePack.rulesStrings.6>
  <Combat_Deflect.rulePack.rulesStrings.7>at->at</Combat_Deflect.rulePack.rulesStrings.7>
  <Combat_Deflect.rulePack.rulesStrings.8>deflected_result-> [adverb_deflected]</Combat_Deflect.rulePack.rulesStrings.8>
  <Combat_Deflect.rulePack.rulesStrings.9>deflected_result->, [deflected_consequence]</Combat_Deflect.rulePack.rulesStrings.9>
  <Combat_Deflect.rulePack.rulesStrings.10>adverb_deflected_opt(p=4)-></Combat_Deflect.rulePack.rulesStrings.10>
  <Combat_Deflect.rulePack.rulesStrings.11>adverb_deflected_opt->[adverb_deflected]</Combat_Deflect.rulePack.rulesStrings.11>
  <Combat_Deflect.rulePack.rulesStrings.12>adverb_deflected->harmlessly</Combat_Deflect.rulePack.rulesStrings.12>
  <Combat_Deflect.rulePack.rulesStrings.13>adverb_deflected->uselessly</Combat_Deflect.rulePack.rulesStrings.13>
  <Combat_Deflect.rulePack.rulesStrings.14>deflected_consequence->but the [TOOL_label] [scraped_past] off [adverb_deflected_opt]</Combat_Deflect.rulePack.rulesStrings.14>
  <Combat_Deflect.rulePack.rulesStrings.15>deflected_consequence->[scraped_present] off [RECIPIENT_possessive] armor [adverb_deflected_opt]</Combat_Deflect.rulePack.rulesStrings.15>
  <Combat_Deflect.rulePack.rulesStrings.16>scraped_present->scraping</Combat_Deflect.rulePack.rulesStrings.16>
  <Combat_Deflect.rulePack.rulesStrings.17>scraped_present->sliding</Combat_Deflect.rulePack.rulesStrings.17>
  <Combat_Deflect.rulePack.rulesStrings.18>scraped_past->scraped</Combat_Deflect.rulePack.rulesStrings.18>
  <Combat_Deflect.rulePack.rulesStrings.19>scraped_past->slid</Combat_Deflect.rulePack.rulesStrings.19>

  <Combat_FailIncludes.rulePack.rulesStrings.0>action->[INITIATOR_definite] [tried] to [damaged_inf] [RECIPIENT_definite]</Combat_FailIncludes.rulePack.rulesStrings.0>
  <Combat_FailIncludes.rulePack.rulesStrings.1>action->[INITIATOR_definite] [tried] to [damaged_inf] [RECIPIENT_definite] with [implement]</Combat_FailIncludes.rulePack.rulesStrings.1>
  <Combat_FailIncludes.rulePack.rulesStrings.2>action->[INITIATOR_definite] [tried] to use [implement] to [damaged_inf] [RECIPIENT_definite]</Combat_FailIncludes.rulePack.rulesStrings.2>
  <Combat_FailIncludes.rulePack.rulesStrings.3>action->[INITIATOR_definite] swung [INITIATOR_possessive] [WEAPON_label] at [RECIPIENT_definite]</Combat_FailIncludes.rulePack.rulesStrings.3>
  <Combat_FailIncludes.rulePack.rulesStrings.4>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] [towardsat] [RECIPIENT_definite] with [implement]</Combat_FailIncludes.rulePack.rulesStrings.4>
  <Combat_FailIncludes.rulePack.rulesStrings.5>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] [towardsat] [RECIPIENT_definite]</Combat_FailIncludes.rulePack.rulesStrings.5>
  <Combat_FailIncludes.rulePack.rulesStrings.6>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] with [implement]</Combat_FailIncludes.rulePack.rulesStrings.6>
  <Combat_FailIncludes.rulePack.rulesStrings.7>towardsat->towards</Combat_FailIncludes.rulePack.rulesStrings.7>
  <Combat_FailIncludes.rulePack.rulesStrings.8>towardsat->at</Combat_FailIncludes.rulePack.rulesStrings.8>
  <Combat_FailIncludes.rulePack.rulesStrings.9>verb_genericattack->swung</Combat_FailIncludes.rulePack.rulesStrings.9>
  <Combat_FailIncludes.rulePack.rulesStrings.10>verb_genericattack->flailed</Combat_FailIncludes.rulePack.rulesStrings.10>
  <Combat_FailIncludes.rulePack.rulesStrings.11>verb_genericattack->thrashed</Combat_FailIncludes.rulePack.rulesStrings.11>
  <Combat_FailIncludes.rulePack.rulesStrings.12>tried->tried</Combat_FailIncludes.rulePack.rulesStrings.12>
  <Combat_FailIncludes.rulePack.rulesStrings.13>tried->attempted</Combat_FailIncludes.rulePack.rulesStrings.13>

  <Combat_Miss.rulePack.rulesStrings.0>r_logentry(p=0.2)->[RECIPIENT_definite] avoided [INITIATOR_definite]'s [WEAPON_label] [damaged_inf].</Combat_Miss.rulePack.rulesStrings.0>
  <Combat_Miss.rulePack.rulesStrings.1>r_logentry(p=0.2)->[INITIATOR_definite] missed [RECIPIENT_definite] with a [damaged_inf] from [implement].</Combat_Miss.rulePack.rulesStrings.1>
  <Combat_Miss.rulePack.rulesStrings.2>r_logentry(p=0.2)->[INITIATOR_definite] [failtype] while trying to [damaged_inf] [RECIPIENT_definite] with [implement].</Combat_Miss.rulePack.rulesStrings.2>
  <Combat_Miss.rulePack.rulesStrings.3>r_logentry(p=0.2)->[INITIATOR_definite] [failtype] while trying to [damaged_inf] [RECIPIENT_definite].</Combat_Miss.rulePack.rulesStrings.3>
  <Combat_Miss.rulePack.rulesStrings.4>r_logentry(p=0.2)->[INITIATOR_definite] [failtype].</Combat_Miss.rulePack.rulesStrings.4>
  <Combat_Miss.rulePack.rulesStrings.5>failtype->stumbled</Combat_Miss.rulePack.rulesStrings.5>
  <Combat_Miss.rulePack.rulesStrings.6>failtype->tripped</Combat_Miss.rulePack.rulesStrings.6>
  <Combat_Miss.rulePack.rulesStrings.7>failtype->flailed</Combat_Miss.rulePack.rulesStrings.7>
  <Combat_Miss.rulePack.rulesStrings.8>failtype->floundered</Combat_Miss.rulePack.rulesStrings.8>
  <Combat_Miss.rulePack.rulesStrings.9>failtype->missed</Combat_Miss.rulePack.rulesStrings.9>
  <Combat_Miss.rulePack.rulesStrings.10>result->but missed</Combat_Miss.rulePack.rulesStrings.10>
  <Combat_Miss.rulePack.rulesStrings.11>result->but hit only air</Combat_Miss.rulePack.rulesStrings.11>
  <Combat_Miss.rulePack.rulesStrings.12>result->but the swing went wide</Combat_Miss.rulePack.rulesStrings.12>
  <Combat_Miss.rulePack.rulesStrings.13>result->but stumbled at the last second</Combat_Miss.rulePack.rulesStrings.13>
  <Combat_Miss.rulePack.rulesStrings.14>result(initiator_flesh!=Mechanoid)->but hesitated at the last second</Combat_Miss.rulePack.rulesStrings.14>

  <Combat_Dodge.rulePack.rulesStrings.0>r_logentry(p=0.2)->[RECIPIENT_definite] dodged [INITIATOR_definite]'s [damaged_inf] from [implement].</Combat_Dodge.rulePack.rulesStrings.0>
  <Combat_Dodge.rulePack.rulesStrings.1>r_logentry(p=0.2)->[RECIPIENT_definite] dodged [INITIATOR_definite]'s [damaged_inf].</Combat_Dodge.rulePack.rulesStrings.1>
  <Combat_Dodge.rulePack.rulesStrings.2>result->but [RECIPIENT_definite] leapt out of the way</Combat_Dodge.rulePack.rulesStrings.2>
  <Combat_Dodge.rulePack.rulesStrings.3>result->but was deceived by [RECIPIENT_definite]'s feint</Combat_Dodge.rulePack.rulesStrings.3>
  <Combat_Dodge.rulePack.rulesStrings.4>result->but the attack was cleverly avoided</Combat_Dodge.rulePack.rulesStrings.4>

  <Combat_RangedFire.rulePack.rulesStrings.0>r_logentry->[INITIATOR_definite] [shotat] [RECIPIENT_definite] with [INITIATOR_possessive] [WEAPON_label].</Combat_RangedFire.rulePack.rulesStrings.0>
  <Combat_RangedFire.rulePack.rulesStrings.1>r_logentry->[INITIATOR_definite] [shot] [INITIATOR_possessive] [WEAPON_label] at [RECIPIENT_definite].</Combat_RangedFire.rulePack.rulesStrings.1>
  <Combat_RangedFire.rulePack.rulesStrings.2>r_logentry->[INITIATOR_definite] [shotat] [RECIPIENT_definite].</Combat_RangedFire.rulePack.rulesStrings.2>
  <Combat_RangedFire.rulePack.rulesStrings.3>r_logentry->[INITIATOR_definite] [shot_a] [WEAPON_projectile_label] [burst] at [RECIPIENT_definite].</Combat_RangedFire.rulePack.rulesStrings.3>
  <Combat_RangedFire.rulePack.rulesStrings.4>r_logentry(RECIPIENT_missing==True)->[INITIATOR_definite] [shot_a] [WEAPON_projectile_label].</Combat_RangedFire.rulePack.rulesStrings.4>
  <Combat_RangedFire.rulePack.rulesStrings.5>r_logentry(RECIPIENT_missing==True)->[INITIATOR_definite] [shot] [INITIATOR_possessive] [WEAPON_label].</Combat_RangedFire.rulePack.rulesStrings.5>
  <Combat_RangedFire.rulePack.rulesStrings.6>shot_a->[adverb_shot] [verb_shot] a</Combat_RangedFire.rulePack.rulesStrings.6>
  <Combat_RangedFire.rulePack.rulesStrings.7>shot_a(p=2)->[verb_shot] a</Combat_RangedFire.rulePack.rulesStrings.7>
  <Combat_RangedFire.rulePack.rulesStrings.8>shot(p=2)->[verb_shot]</Combat_RangedFire.rulePack.rulesStrings.8>
  <Combat_RangedFire.rulePack.rulesStrings.9>shot->[adverb_shot] [verb_shot]</Combat_RangedFire.rulePack.rulesStrings.9>
  <Combat_RangedFire.rulePack.rulesStrings.10>shotat->shot [aburst] at</Combat_RangedFire.rulePack.rulesStrings.10>
  <Combat_RangedFire.rulePack.rulesStrings.11>shotat->[adverb_shot] shot [aburst] at</Combat_RangedFire.rulePack.rulesStrings.11>
  <Combat_RangedFire.rulePack.rulesStrings.12>shotat(p=0.5)->tried to shoot [aburst] at</Combat_RangedFire.rulePack.rulesStrings.12>
  <Combat_RangedFire.rulePack.rulesStrings.13>shotat(p=0.3)->took a shot at</Combat_RangedFire.rulePack.rulesStrings.13>
  <Combat_RangedFire.rulePack.rulesStrings.14>shotat(p=0.2)->took a [adjective_shot] shot at</Combat_RangedFire.rulePack.rulesStrings.14>
  <Combat_RangedFire.rulePack.rulesStrings.15>shotat->fired [aburst] at</Combat_RangedFire.rulePack.rulesStrings.15>
  <Combat_RangedFire.rulePack.rulesStrings.16>shotat->fired [aburst] [adverb_shot] at</Combat_RangedFire.rulePack.rulesStrings.16>
  <Combat_RangedFire.rulePack.rulesStrings.17>shotat(p=0.5)->aimed and fired [aburst] at</Combat_RangedFire.rulePack.rulesStrings.17>
  <Combat_RangedFire.rulePack.rulesStrings.18>shotat(p=0.3)->opened fire at</Combat_RangedFire.rulePack.rulesStrings.18>
  <Combat_RangedFire.rulePack.rulesStrings.19>aburst-></Combat_RangedFire.rulePack.rulesStrings.19>
  <Combat_RangedFire.rulePack.rulesStrings.20>aburst(BURST==True,p=3)->a burst</Combat_RangedFire.rulePack.rulesStrings.20>
  <Combat_RangedFire.rulePack.rulesStrings.21>burst-></Combat_RangedFire.rulePack.rulesStrings.21>
  <Combat_RangedFire.rulePack.rulesStrings.22>burst(BURST==True,p=3)->burst</Combat_RangedFire.rulePack.rulesStrings.22>
  <Combat_RangedFire.rulePack.rulesStrings.23>verb_shot->shot</Combat_RangedFire.rulePack.rulesStrings.23>
  <Combat_RangedFire.rulePack.rulesStrings.24>verb_shot->fired</Combat_RangedFire.rulePack.rulesStrings.24>
  <Combat_RangedFire.rulePack.rulesStrings.25>verb_shot->discharged</Combat_RangedFire.rulePack.rulesStrings.25>
  <Combat_RangedFire.rulePack.rulesStrings.26>adverb_shot->carefully</Combat_RangedFire.rulePack.rulesStrings.26>
  <Combat_RangedFire.rulePack.rulesStrings.27>adverb_shot->quickly</Combat_RangedFire.rulePack.rulesStrings.27>
  <Combat_RangedFire.rulePack.rulesStrings.28>adverb_shot->precisely</Combat_RangedFire.rulePack.rulesStrings.28>
  <Combat_RangedFire.rulePack.rulesStrings.29>adverb_shot->deliberately</Combat_RangedFire.rulePack.rulesStrings.29>
  <Combat_RangedFire.rulePack.rulesStrings.30>adverb_shot(initiator_flesh!=Mechanoid)->gingerly</Combat_RangedFire.rulePack.rulesStrings.30>
  <Combat_RangedFire.rulePack.rulesStrings.31>adverb_shot->precisely</Combat_RangedFire.rulePack.rulesStrings.31>
  <Combat_RangedFire.rulePack.rulesStrings.32>adverb_shot(initiator_flesh!=Mechanoid)->warily</Combat_RangedFire.rulePack.rulesStrings.32>
  <Combat_RangedFire.rulePack.rulesStrings.33>adjective_shot->careful</Combat_RangedFire.rulePack.rulesStrings.33>
  <Combat_RangedFire.rulePack.rulesStrings.34>adjective_shot->quick</Combat_RangedFire.rulePack.rulesStrings.34>
  <Combat_RangedFire.rulePack.rulesStrings.35>adjective_shot->deliberate</Combat_RangedFire.rulePack.rulesStrings.35>
  <Combat_RangedFire.rulePack.rulesStrings.36>adjective_shot->precise</Combat_RangedFire.rulePack.rulesStrings.36>
  <Combat_RangedFire.rulePack.rulesStrings.37>adjective_shot(initiator_flesh!=Mechanoid)->wary</Combat_RangedFire.rulePack.rulesStrings.37>

  <Combat_RangedFire_Thrown.rulePack.rulesStrings.0>r_logentry->[INITIATOR_definite] [threw] [INITIATOR_possessive] [WEAPON_projectile_label] at [RECIPIENT_definite].</Combat_RangedFire_Thrown.rulePack.rulesStrings.0>
  <Combat_RangedFire_Thrown.rulePack.rulesStrings.1>r_logentry->[INITIATOR_definite] [threw_a] [WEAPON_projectile_label] at [RECIPIENT_definite].</Combat_RangedFire_Thrown.rulePack.rulesStrings.1>
  <Combat_RangedFire_Thrown.rulePack.rulesStrings.2>r_logentry(RECIPIENT_missing==True)->[INITIATOR_definite] [threw] [INITIATOR_possessive] [WEAPON_projectile_label].</Combat_RangedFire_Thrown.rulePack.rulesStrings.2>
  <Combat_RangedFire_Thrown.rulePack.rulesStrings.3>r_logentry(RECIPIENT_missing==True)->[INITIATOR_definite] [threw_a] [WEAPON_projectile_label].</Combat_RangedFire_Thrown.rulePack.rulesStrings.3>
  <Combat_RangedFire_Thrown.rulePack.rulesStrings.4>threw_a->[adverb_threw] [verb_threw] a</Combat_RangedFire_Thrown.rulePack.rulesStrings.4>
  <Combat_RangedFire_Thrown.rulePack.rulesStrings.5>threw_a(p=2)->[verb_threw] a</Combat_RangedFire_Thrown.rulePack.rulesStrings.5>
  <Combat_RangedFire_Thrown.rulePack.rulesStrings.6>threw(p=2)->[verb_threw]</Combat_RangedFire_Thrown.rulePack.rulesStrings.6>
  <Combat_RangedFire_Thrown.rulePack.rulesStrings.7>threw->[adverb_threw] [verb_threw]</Combat_RangedFire_Thrown.rulePack.rulesStrings.7>
  <Combat_RangedFire_Thrown.rulePack.rulesStrings.8>verb_threw->threw</Combat_RangedFire_Thrown.rulePack.rulesStrings.8>
  <Combat_RangedFire_Thrown.rulePack.rulesStrings.9>verb_threw->flung</Combat_RangedFire_Thrown.rulePack.rulesStrings.9>
  <Combat_RangedFire_Thrown.rulePack.rulesStrings.10>verb_threw->launched</Combat_RangedFire_Thrown.rulePack.rulesStrings.10>
  <Combat_RangedFire_Thrown.rulePack.rulesStrings.11>adverb_threw->carefully</Combat_RangedFire_Thrown.rulePack.rulesStrings.11>
  <Combat_RangedFire_Thrown.rulePack.rulesStrings.12>adverb_threw->quickly</Combat_RangedFire_Thrown.rulePack.rulesStrings.12>
  <Combat_RangedFire_Thrown.rulePack.rulesStrings.13>adverb_threw->precisely</Combat_RangedFire_Thrown.rulePack.rulesStrings.13>
  <Combat_RangedFire_Thrown.rulePack.rulesStrings.14>adverb_threw->deliberately</Combat_RangedFire_Thrown.rulePack.rulesStrings.14>
  <Combat_RangedFire_Thrown.rulePack.rulesStrings.15>adverb_threw(initiator_flesh!=Mechanoid)->gingerly</Combat_RangedFire_Thrown.rulePack.rulesStrings.15>
  <Combat_RangedFire_Thrown.rulePack.rulesStrings.16>adverb_threw->precisely</Combat_RangedFire_Thrown.rulePack.rulesStrings.16>
  <Combat_RangedFire_Thrown.rulePack.rulesStrings.17>adverb_threw(initiator_flesh!=Mechanoid)->warily</Combat_RangedFire_Thrown.rulePack.rulesStrings.17>
  <Combat_RangedFire_Thrown.rulePack.rulesStrings.18>adjective_threw->careful</Combat_RangedFire_Thrown.rulePack.rulesStrings.18>
  <Combat_RangedFire_Thrown.rulePack.rulesStrings.19>adjective_threw->quick</Combat_RangedFire_Thrown.rulePack.rulesStrings.19>
  <Combat_RangedFire_Thrown.rulePack.rulesStrings.20>adjective_threw->deliberate</Combat_RangedFire_Thrown.rulePack.rulesStrings.20>
  <Combat_RangedFire_Thrown.rulePack.rulesStrings.21>adjective_threw->precise</Combat_RangedFire_Thrown.rulePack.rulesStrings.21>
  <Combat_RangedFire_Thrown.rulePack.rulesStrings.22>adjective_threw(initiator_flesh!=Mechanoid)->wary</Combat_RangedFire_Thrown.rulePack.rulesStrings.22>

  <Combat_RangedDamage.rulePack.rulesStrings.0>r_logentry->[INITIATOR_definite]'s [WEAPON_projectile_label] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets].</Combat_RangedDamage.rulePack.rulesStrings.0>
  <Combat_RangedDamage.rulePack.rulesStrings.1>r_logentry->[INITIATOR_definite]'s [WEAPON_projectile_label] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets] [to] [destroyed_suffix].</Combat_RangedDamage.rulePack.rulesStrings.1>
  <Combat_RangedDamage.rulePack.rulesStrings.2>r_logentry->[INITIATOR_definite]'s [WEAPON_projectile_label] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets] [expertly].</Combat_RangedDamage.rulePack.rulesStrings.2>
  <Combat_RangedDamage.rulePack.rulesStrings.3>r_logentry(p=2)->[INITIATOR_definite]'s [WEAPON_projectile_label] [missed] [ORIGINALTARGET_definite] and [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets].</Combat_RangedDamage.rulePack.rulesStrings.3>
  <Combat_RangedDamage.rulePack.rulesStrings.4>r_logentry(p=2)->[INITIATOR_definite]'s [WEAPON_projectile_label] [missed] [ORIGINALTARGET_definite], [destroyed_present] [RECIPIENT_definite]'s [destroyed_targets].</Combat_RangedDamage.rulePack.rulesStrings.4>
  <Combat_RangedDamage.rulePack.rulesStrings.5>r_logentry->[RECIPIENT_definite]'s [destroyed_targets] was [destroyed_past] by [INITIATOR_definite]'s [WEAPON_projectile_label].</Combat_RangedDamage.rulePack.rulesStrings.5>
  <Combat_RangedDamage.rulePack.rulesStrings.6>r_logentry->[RECIPIENT_definite]'s [destroyed_targets] was [destroyed_past] by [INITIATOR_definite]'s [expert] [WEAPON_projectile_label].</Combat_RangedDamage.rulePack.rulesStrings.6>
  <Combat_RangedDamage.rulePack.rulesStrings.7>r_logentry->[RECIPIENT_definite]'s [destroyed_targets] was [destroyed_past] into [destroyed_suffix] by [INITIATOR_definite]'s [WEAPON_projectile_label].</Combat_RangedDamage.rulePack.rulesStrings.7>
  <Combat_RangedDamage.rulePack.rulesStrings.8>r_logentry(recipient_partDestroyed_count==0)->[INITIATOR_definite]'s [WEAPON_projectile_label] [damaged_past] [RECIPIENT_definite]'s [damaged_targets].</Combat_RangedDamage.rulePack.rulesStrings.8>
  <Combat_RangedDamage.rulePack.rulesStrings.9>r_logentry(recipient_partDestroyed_count==0)->[INITIATOR_definite]'s [WEAPON_projectile_label] [damaged_past] [RECIPIENT_definite]'s [damaged_targets] [expertly].</Combat_RangedDamage.rulePack.rulesStrings.9>
  <Combat_RangedDamage.rulePack.rulesStrings.10>r_logentry(recipient_partDestroyed_count==0,p=2)->[INITIATOR_definite]'s [WEAPON_projectile_label] [missed] [ORIGINALTARGET_definite] and [damaged_past] [RECIPIENT_definite]'s [damaged_targets].</Combat_RangedDamage.rulePack.rulesStrings.10>
  <Combat_RangedDamage.rulePack.rulesStrings.11>r_logentry(recipient_partDestroyed_count==0,p=2)->[INITIATOR_definite]'s [WEAPON_projectile_label] [missed] [ORIGINALTARGET_definite], [damaged_present] [RECIPIENT_definite]'s [damaged_targets].</Combat_RangedDamage.rulePack.rulesStrings.11>
  <Combat_RangedDamage.rulePack.rulesStrings.12>r_logentry(recipient_partDestroyed_count==0)->[RECIPIENT_definite]'s [damaged_targets] was [damaged_past] by [INITIATOR_definite]'s [WEAPON_projectile_label].</Combat_RangedDamage.rulePack.rulesStrings.12>
  <Combat_RangedDamage.rulePack.rulesStrings.13>r_logentry(recipient_partDestroyed_count==0)->[RECIPIENT_definite]'s [damaged_targets] was [damaged_past] by [INITIATOR_definite]'s [expert] [WEAPON_projectile_label].</Combat_RangedDamage.rulePack.rulesStrings.13>
  <Combat_RangedDamage.rulePack.rulesStrings.14>r_logentry(p=3)->[INITIATOR_definite]'s [WEAPON_projectile_label] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets] and [damaged_past] [RECIPIENT_possessive] [damaged_targets].</Combat_RangedDamage.rulePack.rulesStrings.14>
  <Combat_RangedDamage.rulePack.rulesStrings.15>r_logentry(p=6)->[INITIATOR_definite]'s [WEAPON_projectile_label] [missed] [ORIGINALTARGET_definite], [destroyed_present] [RECIPIENT_definite]'s [destroyed_targets] and [damaged_present] [RECIPIENT_possessive] [damaged_targets].</Combat_RangedDamage.rulePack.rulesStrings.15>
  <Combat_RangedDamage.rulePack.rulesStrings.16>r_logentry(p=0.2)->[INITIATOR_definite] hit [RECIPIENT_definite] with a [WEAPON_projectile_label].</Combat_RangedDamage.rulePack.rulesStrings.16>
  <Combat_RangedDamage.rulePack.rulesStrings.17>r_logentry(p=0.2)->[INITIATOR_definite]'s [WEAPON_projectile_label] hit [RECIPIENT_definite].</Combat_RangedDamage.rulePack.rulesStrings.17>
  <Combat_RangedDamage.rulePack.rulesStrings.18>r_logentry(p=0.4)->[INITIATOR_definite] [missed] [ORIGINALTARGET_definite] and hit [RECIPIENT_definite] with a [WEAPON_projectile_label].</Combat_RangedDamage.rulePack.rulesStrings.18>
  <Combat_RangedDamage.rulePack.rulesStrings.19>r_logentry(p=0.4)->[INITIATOR_definite]'s [WEAPON_projectile_label] [missed] [ORIGINALTARGET_definite] and hit [RECIPIENT_definite].</Combat_RangedDamage.rulePack.rulesStrings.19>
  <Combat_RangedDamage.rulePack.rulesStrings.20>r_logentry(p=0.2)->[INITIATOR_definite] hit [RECIPIENT_definite] with a [WEAPON_projectile_label] intended for [ORIGINALTARGET_definite].</Combat_RangedDamage.rulePack.rulesStrings.20>
  <Combat_RangedDamage.rulePack.rulesStrings.21>weapon_projectile_label(p=0.05)->shot</Combat_RangedDamage.rulePack.rulesStrings.21>
  <Combat_RangedDamage.rulePack.rulesStrings.22>destroyed_past->shattered</Combat_RangedDamage.rulePack.rulesStrings.22>
  <Combat_RangedDamage.rulePack.rulesStrings.23>destroyed_past->crushed</Combat_RangedDamage.rulePack.rulesStrings.23>
  <Combat_RangedDamage.rulePack.rulesStrings.24>destroyed_past->obliterated</Combat_RangedDamage.rulePack.rulesStrings.24>
  <Combat_RangedDamage.rulePack.rulesStrings.25>destroyed_past->annihilated</Combat_RangedDamage.rulePack.rulesStrings.25>
  <Combat_RangedDamage.rulePack.rulesStrings.26>destroyed_past->pierced</Combat_RangedDamage.rulePack.rulesStrings.26>
  <Combat_RangedDamage.rulePack.rulesStrings.27>destroyed_past->perforated</Combat_RangedDamage.rulePack.rulesStrings.27>
  <Combat_RangedDamage.rulePack.rulesStrings.28>destroyed_past->punctured</Combat_RangedDamage.rulePack.rulesStrings.28>
  <Combat_RangedDamage.rulePack.rulesStrings.29>destroyed_present->shattering</Combat_RangedDamage.rulePack.rulesStrings.29>
  <Combat_RangedDamage.rulePack.rulesStrings.30>destroyed_present->crushing</Combat_RangedDamage.rulePack.rulesStrings.30>
  <Combat_RangedDamage.rulePack.rulesStrings.31>destroyed_present->obliterating</Combat_RangedDamage.rulePack.rulesStrings.31>
  <Combat_RangedDamage.rulePack.rulesStrings.32>destroyed_present->annihilating</Combat_RangedDamage.rulePack.rulesStrings.32>
  <Combat_RangedDamage.rulePack.rulesStrings.33>destroyed_present->piercing</Combat_RangedDamage.rulePack.rulesStrings.33>
  <Combat_RangedDamage.rulePack.rulesStrings.34>destroyed_present->perforating</Combat_RangedDamage.rulePack.rulesStrings.34>
  <Combat_RangedDamage.rulePack.rulesStrings.35>destroyed_present->puncturing</Combat_RangedDamage.rulePack.rulesStrings.35>
  <Combat_RangedDamage.rulePack.rulesStrings.36>destroyed_suffix->pieces</Combat_RangedDamage.rulePack.rulesStrings.36>
  <Combat_RangedDamage.rulePack.rulesStrings.37>destroyed_suffix->bits</Combat_RangedDamage.rulePack.rulesStrings.37>
  <Combat_RangedDamage.rulePack.rulesStrings.38>destroyed_suffix->a fine mist</Combat_RangedDamage.rulePack.rulesStrings.38>
  <Combat_RangedDamage.rulePack.rulesStrings.39>destroyed_suffix->fragments</Combat_RangedDamage.rulePack.rulesStrings.39>
  <Combat_RangedDamage.rulePack.rulesStrings.40>destroyed_suffix(p=0.5)->a holey mess</Combat_RangedDamage.rulePack.rulesStrings.40>
  <Combat_RangedDamage.rulePack.rulesStrings.41>destroyed_suffix(recipient_flesh!=Mechanoid,p=0.2)->ground beef</Combat_RangedDamage.rulePack.rulesStrings.41>
  <Combat_RangedDamage.rulePack.rulesStrings.42>damaged_past->wounded</Combat_RangedDamage.rulePack.rulesStrings.42>
  <Combat_RangedDamage.rulePack.rulesStrings.43>damaged_past->injured</Combat_RangedDamage.rulePack.rulesStrings.43>
  <Combat_RangedDamage.rulePack.rulesStrings.44>damaged_past->pierced</Combat_RangedDamage.rulePack.rulesStrings.44>
  <Combat_RangedDamage.rulePack.rulesStrings.45>damaged_past->damaged</Combat_RangedDamage.rulePack.rulesStrings.45>
  <Combat_RangedDamage.rulePack.rulesStrings.46>damaged_past->shot</Combat_RangedDamage.rulePack.rulesStrings.46>
  <Combat_RangedDamage.rulePack.rulesStrings.47>damaged_present->wounding</Combat_RangedDamage.rulePack.rulesStrings.47>
  <Combat_RangedDamage.rulePack.rulesStrings.48>damaged_present->injuring</Combat_RangedDamage.rulePack.rulesStrings.48>
  <Combat_RangedDamage.rulePack.rulesStrings.49>damaged_present->piercing</Combat_RangedDamage.rulePack.rulesStrings.49>
  <Combat_RangedDamage.rulePack.rulesStrings.50>damaged_present->damaging</Combat_RangedDamage.rulePack.rulesStrings.50>
  <Combat_RangedDamage.rulePack.rulesStrings.51>damaged_present->shooting</Combat_RangedDamage.rulePack.rulesStrings.51>
  <Combat_RangedDamage.rulePack.rulesStrings.52>damaged_suffix->in an ugly fashion</Combat_RangedDamage.rulePack.rulesStrings.52>
  <Combat_RangedDamage.rulePack.rulesStrings.53>damaged_suffix(recipient_flesh!=Mechanoid)->with visible blood</Combat_RangedDamage.rulePack.rulesStrings.53>
  <Combat_RangedDamage.rulePack.rulesStrings.54>damaged_suffix(recipient_flesh!=Mechanoid)->with the flesh visible</Combat_RangedDamage.rulePack.rulesStrings.54>
  <Combat_RangedDamage.rulePack.rulesStrings.55>to->to</Combat_RangedDamage.rulePack.rulesStrings.55>
  <Combat_RangedDamage.rulePack.rulesStrings.56>to->into</Combat_RangedDamage.rulePack.rulesStrings.56>
  <Combat_RangedDamage.rulePack.rulesStrings.57>missed->missed</Combat_RangedDamage.rulePack.rulesStrings.57>
  <Combat_RangedDamage.rulePack.rulesStrings.58>missed->narrowly missed</Combat_RangedDamage.rulePack.rulesStrings.58>

  <Combat_RangedDeflect.rulePack.rulesStrings.0>r_logentry->[INITIATOR_definite]'s [WEAPON_projectile_label] [damaged_past] [RECIPIENT_definite][damaged_target] [deflected_result].</Combat_RangedDeflect.rulePack.rulesStrings.0>
  <Combat_RangedDeflect.rulePack.rulesStrings.1>r_logentry(p=2)->[INITIATOR_definite]'s [WEAPON_projectile_label] [missed] [ORIGINALTARGET_definite] and [damaged_past] [RECIPIENT_definite][damaged_target_possessive_opt] [deflected_result].</Combat_RangedDeflect.rulePack.rulesStrings.1>
  <Combat_RangedDeflect.rulePack.rulesStrings.2>r_logentry->[RECIPIENT_definite][damaged_target_possessive_opt] was [damaged_past] by [INITIATOR_definite]'s [WEAPON_projectile_label] [deflected_result].</Combat_RangedDeflect.rulePack.rulesStrings.2>
  <Combat_RangedDeflect.rulePack.rulesStrings.3>r_logentry(p=0.2)->[INITIATOR_definite] hit [RECIPIENT_definite][damaged_target_possessive_opt] with a [WEAPON_projectile_label] [deflected_result].</Combat_RangedDeflect.rulePack.rulesStrings.3>
  <Combat_RangedDeflect.rulePack.rulesStrings.4>r_logentry(p=0.2)->[INITIATOR_definite]'s [WEAPON_projectile_label] hit [RECIPIENT_definite][damaged_target_possessive_opt] [deflected_result].</Combat_RangedDeflect.rulePack.rulesStrings.4>
  <Combat_RangedDeflect.rulePack.rulesStrings.5>r_logentry(p=0.4)->[INITIATOR_definite] [missed] [ORIGINALTARGET_definite] and hit [RECIPIENT_definite][damaged_target_possessive_opt] with a [WEAPON_projectile_label] [deflected_result].</Combat_RangedDeflect.rulePack.rulesStrings.5>
  <Combat_RangedDeflect.rulePack.rulesStrings.6>r_logentry(p=0.4)->[INITIATOR_definite]'s [WEAPON_projectile_label] [missed] [ORIGINALTARGET_definite] and hit [RECIPIENT_definite][damaged_target_possessive_opt] [deflected_result].</Combat_RangedDeflect.rulePack.rulesStrings.6>
  <Combat_RangedDeflect.rulePack.rulesStrings.7>r_logentry(p=0.2)->[INITIATOR_definite] hit [RECIPIENT_definite][damaged_target_possessive_opt] with a [WEAPON_projectile_label] intended for [ORIGINALTARGET_definite] [deflected_result].</Combat_RangedDeflect.rulePack.rulesStrings.7>
  <Combat_RangedDeflect.rulePack.rulesStrings.8>weapon_projectile_label(p=0.05)->shot</Combat_RangedDeflect.rulePack.rulesStrings.8>
  <Combat_RangedDeflect.rulePack.rulesStrings.9>damaged_target_possessive_opt-></Combat_RangedDeflect.rulePack.rulesStrings.9>
  <Combat_RangedDeflect.rulePack.rulesStrings.10>damaged_target_possessive_opt(recipient_part_damaged0_outside==True)->'s [RECIPIENT_part_damaged0_label]</Combat_RangedDeflect.rulePack.rulesStrings.10>
  <Combat_RangedDeflect.rulePack.rulesStrings.11>deflected_result-> [adverb_deflected]</Combat_RangedDeflect.rulePack.rulesStrings.11>
  <Combat_RangedDeflect.rulePack.rulesStrings.12>deflected_result->, [deflected_consequence]</Combat_RangedDeflect.rulePack.rulesStrings.12>
  <Combat_RangedDeflect.rulePack.rulesStrings.13>adverb_deflected_opt(p=4)-></Combat_RangedDeflect.rulePack.rulesStrings.13>
  <Combat_RangedDeflect.rulePack.rulesStrings.14>adverb_deflected_opt->[adverb_deflected]</Combat_RangedDeflect.rulePack.rulesStrings.14>
  <Combat_RangedDeflect.rulePack.rulesStrings.15>adverb_deflected->harmlessly</Combat_RangedDeflect.rulePack.rulesStrings.15>
  <Combat_RangedDeflect.rulePack.rulesStrings.16>adverb_deflected->uselessly</Combat_RangedDeflect.rulePack.rulesStrings.16>
  <Combat_RangedDeflect.rulePack.rulesStrings.17>deflected_consequence->but it [scraped_past] off [adverb_deflected_opt]</Combat_RangedDeflect.rulePack.rulesStrings.17>
  <Combat_RangedDeflect.rulePack.rulesStrings.18>deflected_consequence->[scraped_present] off [RECIPIENT_possessive] armor [adverb_deflected_opt]</Combat_RangedDeflect.rulePack.rulesStrings.18>
  <Combat_RangedDeflect.rulePack.rulesStrings.19>scraped_past->ricocheted</Combat_RangedDeflect.rulePack.rulesStrings.19>
  <Combat_RangedDeflect.rulePack.rulesStrings.20>scraped_present->ricocheting</Combat_RangedDeflect.rulePack.rulesStrings.20>
  <Combat_RangedDeflect.rulePack.rulesStrings.21>missed->missed</Combat_RangedDeflect.rulePack.rulesStrings.21>
  <Combat_RangedDeflect.rulePack.rulesStrings.22>missed->narrowly missed</Combat_RangedDeflect.rulePack.rulesStrings.22>

  <Combat_RangedMiss.rulePack.rulesStrings.0>r_logentry->[INITIATOR_definite]'s [WEAPON_projectile_label] [missed].</Combat_RangedMiss.rulePack.rulesStrings.0>
  <Combat_RangedMiss.rulePack.rulesStrings.1>r_logentry->[INITIATOR_definite] missed [ORIGINALTARGET_definite].</Combat_RangedMiss.rulePack.rulesStrings.1>
  <Combat_RangedMiss.rulePack.rulesStrings.2>r_logentry->[ORIGINALTARGET_definite] [avoidance], [INITIATOR_definite]'s [WEAPON_projectile_label] [missing].</Combat_RangedMiss.rulePack.rulesStrings.2>
  <Combat_RangedMiss.rulePack.rulesStrings.3>missed(p=4)->missed</Combat_RangedMiss.rulePack.rulesStrings.3>
  <Combat_RangedMiss.rulePack.rulesStrings.4>missed(p=2)->missed by a small margin</Combat_RangedMiss.rulePack.rulesStrings.4>
  <Combat_RangedMiss.rulePack.rulesStrings.5>missed(p=2)->missed by a wide margin</Combat_RangedMiss.rulePack.rulesStrings.5>
  <Combat_RangedMiss.rulePack.rulesStrings.6>missed->went wide</Combat_RangedMiss.rulePack.rulesStrings.6>
  <Combat_RangedMiss.rulePack.rulesStrings.7>missed->flew into the air</Combat_RangedMiss.rulePack.rulesStrings.7>
  <Combat_RangedMiss.rulePack.rulesStrings.8>missed->flew high into the air</Combat_RangedMiss.rulePack.rulesStrings.8>
  <Combat_RangedMiss.rulePack.rulesStrings.9>missed->dug into the ground</Combat_RangedMiss.rulePack.rulesStrings.9>
  <Combat_RangedMiss.rulePack.rulesStrings.10>missed->skipped off the ground and was lost</Combat_RangedMiss.rulePack.rulesStrings.10>
  <Combat_RangedMiss.rulePack.rulesStrings.11>missed->dug a divot out of the ground</Combat_RangedMiss.rulePack.rulesStrings.11>
  <Combat_RangedMiss.rulePack.rulesStrings.12>missed(p=0.2)->passed within millimeters of [ORIGINALTARGET_definite]</Combat_RangedMiss.rulePack.rulesStrings.12>
  <Combat_RangedMiss.rulePack.rulesStrings.13>missed->passed within centimeters of [ORIGINALTARGET_definite]</Combat_RangedMiss.rulePack.rulesStrings.13>
  <Combat_RangedMiss.rulePack.rulesStrings.14>missed->passed within a meter of [ORIGINALTARGET_definite]</Combat_RangedMiss.rulePack.rulesStrings.14>
  <Combat_RangedMiss.rulePack.rulesStrings.15>missed->was blown offcourse</Combat_RangedMiss.rulePack.rulesStrings.15>
  <Combat_RangedMiss.rulePack.rulesStrings.16>missing->missing</Combat_RangedMiss.rulePack.rulesStrings.16>
  <Combat_RangedMiss.rulePack.rulesStrings.17>missing->missing by a small margin</Combat_RangedMiss.rulePack.rulesStrings.17>
  <Combat_RangedMiss.rulePack.rulesStrings.18>missing->missing by a wide margin</Combat_RangedMiss.rulePack.rulesStrings.18>
  <Combat_RangedMiss.rulePack.rulesStrings.19>missing->going wide</Combat_RangedMiss.rulePack.rulesStrings.19>
  <Combat_RangedMiss.rulePack.rulesStrings.20>missing->flying into the air</Combat_RangedMiss.rulePack.rulesStrings.20>
  <Combat_RangedMiss.rulePack.rulesStrings.21>missing->flying high into the air</Combat_RangedMiss.rulePack.rulesStrings.21>
  <Combat_RangedMiss.rulePack.rulesStrings.22>missing->digging into the ground</Combat_RangedMiss.rulePack.rulesStrings.22>
  <Combat_RangedMiss.rulePack.rulesStrings.23>missing->skipping off the ground and becoming lost</Combat_RangedMiss.rulePack.rulesStrings.23>
  <Combat_RangedMiss.rulePack.rulesStrings.24>missing->digging a divot out of the ground</Combat_RangedMiss.rulePack.rulesStrings.24>
  <Combat_RangedMiss.rulePack.rulesStrings.25>missing(p=0.2)->passing within millimeters of [ORIGINALTARGET_definite]</Combat_RangedMiss.rulePack.rulesStrings.25>
  <Combat_RangedMiss.rulePack.rulesStrings.26>missing->passing within centimeters of [ORIGINALTARGET_definite]</Combat_RangedMiss.rulePack.rulesStrings.26>
  <Combat_RangedMiss.rulePack.rulesStrings.27>missing->passing within a meter of [ORIGINALTARGET_definite]</Combat_RangedMiss.rulePack.rulesStrings.27>
  <Combat_RangedMiss.rulePack.rulesStrings.28>missing->blowing offcourse</Combat_RangedMiss.rulePack.rulesStrings.28>
  <Combat_RangedMiss.rulePack.rulesStrings.29>avoidance(ORIGINALTARGET_mobile==True)->jerked aside at the last second</Combat_RangedMiss.rulePack.rulesStrings.29>
  <Combat_RangedMiss.rulePack.rulesStrings.30>avoidance(ORIGINALTARGET_mobile==True)->stumbled in an attempt to escape</Combat_RangedMiss.rulePack.rulesStrings.30>
  <Combat_RangedMiss.rulePack.rulesStrings.31>avoidance(ORIGINALTARGET_mobile==True)->threw [ORIGINALTARGET_objective]self to the ground</Combat_RangedMiss.rulePack.rulesStrings.31>
  <Combat_RangedMiss.rulePack.rulesStrings.32>avoidance(ORIGINALTARGET_mobile==True,p=0.3)->ducked behind [COVER_definite]</Combat_RangedMiss.rulePack.rulesStrings.32>
  <Combat_RangedMiss.rulePack.rulesStrings.33>avoidance(ORIGINALTARGET_mobile==True,p=0.3)->leaped behind [COVER_definite]</Combat_RangedMiss.rulePack.rulesStrings.33>

  <Combat_ExplosionImpact.rulePack.rulesStrings.0>prefix->The [blast] [fromof] [INITIATOR_definite]'s [WEAPON_projectile_label]</Combat_ExplosionImpact.rulePack.rulesStrings.0>
  <Combat_ExplosionImpact.rulePack.rulesStrings.1>prefix->The [blast] [fromof] [INITIATOR_definite]'s [WEAPON_label]</Combat_ExplosionImpact.rulePack.rulesStrings.1>
  <Combat_ExplosionImpact.rulePack.rulesStrings.2>prefix->The [blast] [fromof] [INITIATOR_definite]'s [WEAPON_projectile_label]</Combat_ExplosionImpact.rulePack.rulesStrings.2>
  <Combat_ExplosionImpact.rulePack.rulesStrings.3>prefix->The [blast] [fromof] [INITIATOR_definite]'s [WEAPON_label]</Combat_ExplosionImpact.rulePack.rulesStrings.3>
  <Combat_ExplosionImpact.rulePack.rulesStrings.4>prefix->[INITIATOR_definite]'s [blast]</Combat_ExplosionImpact.rulePack.rulesStrings.4>
  <Combat_ExplosionImpact.rulePack.rulesStrings.5>prefix->[INITIATOR_definite]'s [WEAPON_projectile_label] [blast]</Combat_ExplosionImpact.rulePack.rulesStrings.5>
  <Combat_ExplosionImpact.rulePack.rulesStrings.6>prefix->[INITIATOR_definite]'s [WEAPON_label] [blast]</Combat_ExplosionImpact.rulePack.rulesStrings.6>
  <Combat_ExplosionImpact.rulePack.rulesStrings.7>prefix->[INITIATOR_definite]'s [WEAPON_projectile_label]</Combat_ExplosionImpact.rulePack.rulesStrings.7>
  <Combat_ExplosionImpact.rulePack.rulesStrings.8>prefix->[INITIATOR_definite]'s [WEAPON_label]</Combat_ExplosionImpact.rulePack.rulesStrings.8>
  <Combat_ExplosionImpact.rulePack.rulesStrings.9>r_logentry->[prefix] [injured] [RECIPIENT_definite].</Combat_ExplosionImpact.rulePack.rulesStrings.9>
  <Combat_ExplosionImpact.rulePack.rulesStrings.10>r_logentry->[prefix] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets].</Combat_ExplosionImpact.rulePack.rulesStrings.10>
  <Combat_ExplosionImpact.rulePack.rulesStrings.11>r_logentry->[prefix] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets] [adverb_flavortext].</Combat_ExplosionImpact.rulePack.rulesStrings.11>
  <Combat_ExplosionImpact.rulePack.rulesStrings.12>r_logentry->[prefix] [adverb_flavortext] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets].</Combat_ExplosionImpact.rulePack.rulesStrings.12>
  <Combat_ExplosionImpact.rulePack.rulesStrings.13>r_logentry->[prefix] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets] and [damaged_past] [RECIPIENT_possessive] [damaged_targets].</Combat_ExplosionImpact.rulePack.rulesStrings.13>
  <Combat_ExplosionImpact.rulePack.rulesStrings.14>r_logentry(recipient_part_destroyed_count==0)->[prefix] [damaged_past] [RECIPIENT_definite]'s [damaged_targets].</Combat_ExplosionImpact.rulePack.rulesStrings.14>
  <Combat_ExplosionImpact.rulePack.rulesStrings.15>r_logentry(recipient_part_destroyed_count==0)->[prefix] [damaged_past] [RECIPIENT_definite]'s [damaged_targets] [adverb_flavortext].</Combat_ExplosionImpact.rulePack.rulesStrings.15>
  <Combat_ExplosionImpact.rulePack.rulesStrings.16>r_logentry(recipient_part_destroyed_count==0)->[prefix] [adverb_flavortext] [damaged_past] [RECIPIENT_definite]'s [damaged_targets].</Combat_ExplosionImpact.rulePack.rulesStrings.16>
  <Combat_ExplosionImpact.rulePack.rulesStrings.17>r_logentry->[RECIPIENT_definite] was [damaged_past] by [INITIATOR_definite].</Combat_ExplosionImpact.rulePack.rulesStrings.17>
  <Combat_ExplosionImpact.rulePack.rulesStrings.18>r_logentry->[RECIPIENT_definite] was [damaged_past] [adverb_flavortext] by [INITIATOR_definite].</Combat_ExplosionImpact.rulePack.rulesStrings.18>
  <Combat_ExplosionImpact.rulePack.rulesStrings.19>r_logentry->[RECIPIENT_definite] was [damaged_past].</Combat_ExplosionImpact.rulePack.rulesStrings.19>
  <Combat_ExplosionImpact.rulePack.rulesStrings.20>r_logentry(p=0.001)->[RECIPIENT_definite] was caught in an explosion.</Combat_ExplosionImpact.rulePack.rulesStrings.20>
  <Combat_ExplosionImpact.rulePack.rulesStrings.21>r_logentry(p=0.001)->[RECIPIENT_definite] was hit by an explosion.</Combat_ExplosionImpact.rulePack.rulesStrings.21>
  <Combat_ExplosionImpact.rulePack.rulesStrings.22>blast->explosion</Combat_ExplosionImpact.rulePack.rulesStrings.22>
  <Combat_ExplosionImpact.rulePack.rulesStrings.23>blast->blast</Combat_ExplosionImpact.rulePack.rulesStrings.23>
  <Combat_ExplosionImpact.rulePack.rulesStrings.24>blast->shockwave</Combat_ExplosionImpact.rulePack.rulesStrings.24>
  <Combat_ExplosionImpact.rulePack.rulesStrings.25>blast->detonation</Combat_ExplosionImpact.rulePack.rulesStrings.25>
  <Combat_ExplosionImpact.rulePack.rulesStrings.26>blast->discharge</Combat_ExplosionImpact.rulePack.rulesStrings.26>
  <Combat_ExplosionImpact.rulePack.rulesStrings.27>blast->impact</Combat_ExplosionImpact.rulePack.rulesStrings.27>
  <Combat_ExplosionImpact.rulePack.rulesStrings.28>fromof->from</Combat_ExplosionImpact.rulePack.rulesStrings.28>
  <Combat_ExplosionImpact.rulePack.rulesStrings.29>fromof->of</Combat_ExplosionImpact.rulePack.rulesStrings.29>


</LanguageData>
